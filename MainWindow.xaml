<views:BaseThemeWindow x:Class="Einsatzueberwachung.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:vm="clr-namespace:Einsatzueberwachung.ViewModels"
        xmlns:converters="clr-namespace:Einsatzueberwachung.Converters"
        xmlns:views="clr-namespace:Einsatzueberwachung.Views"
        Title="{Binding WindowTitle}" 
        Height="900" Width="1600"
        MinHeight="600" MinWidth="1200"
        Icon="pack://application:,,,/Resources/app.ico"
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanResize"
        WindowState="Normal"
        Background="{DynamicResource Surface}">

    <!-- DataContext wird über Code-Behind gesetzt -->
    <!-- <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext> -->

    <Window.InputBindings>
        <!-- Keyboard Shortcuts -->
        <KeyBinding Key="F11" Command="{Binding FullscreenToggleCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding AddTeamCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding ExportCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="T" Command="{Binding ThemeToggleCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="H" Command="{Binding HelpCommand}"/>
        
        <!-- F1-F10 Team Timer Shortcuts -->
        <KeyBinding Key="F1" Command="{Binding TeamTimerCommand}" CommandParameter="0"/>
        <KeyBinding Key="F2" Command="{Binding TeamTimerCommand}" CommandParameter="1"/>
        <KeyBinding Key="F3" Command="{Binding TeamTimerCommand}" CommandParameter="2"/>
        <KeyBinding Key="F4" Command="{Binding TeamTimerCommand}" CommandParameter="3"/>
        <KeyBinding Key="F5" Command="{Binding TeamTimerCommand}" CommandParameter="4"/>
        <KeyBinding Key="F6" Command="{Binding TeamTimerCommand}" CommandParameter="5"/>
        <KeyBinding Key="F7" Command="{Binding TeamTimerCommand}" CommandParameter="6"/>
        <KeyBinding Key="F8" Command="{Binding TeamTimerCommand}" CommandParameter="7"/>
        <KeyBinding Key="F9" Command="{Binding TeamTimerCommand}" CommandParameter="8"/>
        <KeyBinding Key="F10" Command="{Binding TeamTimerCommand}" CommandParameter="9"/>
    </Window.InputBindings>

    <Window.Resources>
        <!-- Responsive Converters -->
        <converters:WidthToBooleanConverter x:Key="WidthToBooleanConverter"/>
        <converters:WidthToVisibilityConverter x:Key="WidthToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <views:ThreadMarginConverter x:Key="ThreadMarginConverter"/>
        
        <!-- Custom Styles for MainWindow using global design system -->
        <Style x:Key="HeaderCard" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource PrimaryGradient}"/>
            <Setter Property="Effect" Value="{StaticResource Elevation2}"/>
            <Setter Property="CornerRadius" Value="0,0,16,16"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="24,16"/>
            <!-- Added missing properties from Card style -->
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        
        <!-- Responsive Header Card for smaller displays -->
        <Style x:Key="CompactHeaderCard" TargetType="Border" BasedOn="{StaticResource HeaderCard}">
            <Setter Property="Padding" Value="16,12"/>
        </Style>
        
        <Style x:Key="ClockDisplay" TargetType="TextBlock" BasedOn="{StaticResource DisplayMedium}">
            <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Effect" Value="{StaticResource Elevation1}"/>
        </Style>
        
        <Style x:Key="ActionButton" TargetType="Button" BasedOn="{StaticResource FilledButton}">
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="Padding" Value="20,12"/>
        </Style>
        
        <!-- Responsive Action Button for smaller displays -->
        <Style x:Key="CompactActionButton" TargetType="Button" BasedOn="{StaticResource ActionButton}">
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="Margin" Value="4,0"/>
        </Style>
        
        <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource FAB}">
            <Setter Property="Width" Value="48"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Margin" Value="4,0"/>
        </Style>
        
        <!-- Compact Icon Button for smaller displays -->
        <Style x:Key="CompactIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="2,0"/>
        </Style>
        
        <Style x:Key="WelcomeHero" TargetType="Border" BasedOn="{StaticResource Card}">
            <Setter Property="Background" Value="{DynamicResource PrimaryContainer}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Effect" Value="{StaticResource Elevation3}"/>
        </Style>

        <!-- Adaptive Layout Trigger -->
        <Style x:Key="AdaptiveGrid" TargetType="Grid">
            <Style.Triggers>
                <!-- Small Display Layout (< 1400px width) -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToVisibilityConverter}, ConverterParameter=1400}" Value="True">
                    <Setter Property="Tag" Value="Compact"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>   <!-- Trennlinie zwischen den Bereichen -->
            <ColumnDefinition Width="400" MinWidth="300" MaxWidth="500"/> <!-- Flexible rechte Spalte -->
        </Grid.ColumnDefinitions>

        <!-- Linke Hauptseite mit Teams -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- 🏢 Responsive Professional Header -->
            <Border Grid.Row="0" x:Name="HeaderBorder">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource HeaderCard}">
                        <Style.Triggers>
                            <!-- Compact Header für kleine Bildschirme -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                <Setter Property="Padding" Value="16,12"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                
                <Grid x:Name="HeaderGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Mission Info Section - Responsive -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" x:Name="MissionInfoPanel">
                        <!-- Professional Logo - PERFECTLY ROUND with Ellipse Clipping -->
                        <Border x:Name="LogoBorder" Width="56" Height="56" CornerRadius="28" 
                               Background="{DynamicResource Surface}" Margin="0,0,20,0"
                               BorderBrush="{DynamicResource Surface}" BorderThickness="2">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <!-- Kleineres Logo für kompakte Ansicht -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="40"/>
                                            <Setter Property="CornerRadius" Value="20"/>
                                            <Setter Property="Margin" Value="0,0,12,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="270" ShadowDepth="2" 
                                                  Opacity="0.2" BlurRadius="6"/>
                            </Border.Effect>
                            
                            <!-- PERFEKT RUNDE ELLIPSE FÜR DAS LOGO -->
                            <Ellipse Width="52" Height="52" x:Name="LogoEllipse">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Style.Triggers>
                                            <!-- Anpassung für kompakte Ansicht -->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                                <Setter Property="Width" Value="36"/>
                                                <Setter Property="Height" Value="36"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="/Resources/logo.jpeg" 
                                               Stretch="UniformToFill"
                                               AlignmentX="Center"
                                               AlignmentY="Center"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>
                        
                        <!-- Mission Details - Adaptive font sizes -->
                        <StackPanel VerticalAlignment="Center" x:Name="MissionDetailsPanel">
                            <TextBlock Text="{Binding EinsatzInfo}" x:Name="EinsatzInfoText"
                                      Foreground="{DynamicResource OnPrimary}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TitleLarge}">
                                        <Style.Triggers>
                                            <!-- Kleinere Schrift für kompakte Ansicht -->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                                <Setter Property="FontSize" Value="18"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{Binding Einsatzort}" x:Name="EinsatzortText"
                                      Foreground="{DynamicResource OnPrimary}" Opacity="0.9">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource BodyMedium}">
                                        <Style.Triggers>
                                            <!-- Ausblenden bei sehr kleinen Bildschirmen -->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1200}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{Binding Einsatzleiter}" x:Name="EinsatzleiterText"
                                      Foreground="{DynamicResource OnPrimary}" Opacity="0.9">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource BodyMedium}">
                                        <Style.Triggers>
                                            <!-- Ausblenden bei sehr kleinen Bildschirmen -->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1200}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>

                    <!-- Central Clock & Status - Always visible but adaptive -->
                    <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ClockPanel">
                        <TextBlock Text="{Binding CurrentTime}" x:Name="ClockDisplay"
                                  Foreground="{DynamicResource OnPrimary}"
                                  FontFamily="Consolas"
                                  FontWeight="Bold"
                                  HorizontalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource DisplayMedium}">
                                    <Style.Triggers>
                                        <!-- Kleinere Uhr für kompakte Ansicht -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                            <Setter Property="FontSize" Value="28"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <Border Background="{DynamicResource Surface}" CornerRadius="20" 
                               Padding="16,6" Margin="0,8,0,0" x:Name="ShortcutHintBorder">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <!-- Ausblenden der Keyboard-Hints bei kleinen Bildschirmen -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1200}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBlock Text="F1-F10: Teams | Strg+N: + Team | F11: Vollbild" 
                                      FontSize="13"
                                      FontWeight="SemiBold"
                                      Foreground="{DynamicResource Primary}"
                                      HorizontalAlignment="Center"/>
                        </Border>
                    </StackPanel>

                    <!-- Action Controls - Responsive layout -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" x:Name="ActionControlsPanel">
                        <!-- Team hinzufügen Button - Nur nach dem ersten Team sichtbar -->
                        <Button Command="{Binding AddTeamCommand}" 
                               Background="{DynamicResource Primary}"
                               Foreground="{DynamicResource OnPrimary}"
                               ToolTip="Hundeteam hinzufügen (Strg+N)" 
                               x:Name="AddTeamButton"
                               Visibility="{Binding ShowAddTeamButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ActionButton}">
                                    <Style.Triggers>
                                        <!-- Kompakter Button für kleine Bildschirme -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                            <Setter Property="Padding" Value="16,10"/>
                                            <Setter Property="Margin" Value="4,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Plus" Width="14" Height="14" 
                                               Foreground="{DynamicResource OnPrimary}" Margin="0,0,6,0"/>
                                <TextBlock Text="Team" Foreground="{DynamicResource OnPrimary}" x:Name="AddTeamButtonText">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <!-- Nur Icon bei sehr kleinen Bildschirmen -->
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1200}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </Button>
                        
                        <!-- NEU: Karte öffnen Button -->
                        <Button Click="OpenMapButton_Click" 
                               Background="{DynamicResource Secondary}"
                               Foreground="{DynamicResource OnSecondary}"
                               ToolTip="Karte mit Suchgebieten öffnen" 
                               x:Name="OpenMapButton">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ActionButton}">
                                    <Style.Triggers>
                                        <!-- Kompakter Button für kleine Bildschirme -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                            <Setter Property="Padding" Value="16,10"/>
                                            <Setter Property="Margin" Value="4,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="MapMarker" Width="14" Height="14" 
                                               Foreground="{DynamicResource OnSecondary}" Margin="0,0,6,0"/>
                                <TextBlock Text="Karte" Foreground="{DynamicResource OnSecondary}" x:Name="OpenMapButtonText">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <!-- Nur Icon bei sehr kleinen Bildschirmen -->
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1200}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </Button>
                        
                        <Button Command="{Binding MenuCommand}" 
                               Background="{DynamicResource Primary}"
                               ToolTip="Einstellungen">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="40"/>
                                            <Setter Property="Margin" Value="2,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <fa:ImageAwesome Icon="Cog" Width="18" Height="18" 
                                           Foreground="{DynamicResource OnPrimary}"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- 🐕 Teams Container - Responsive Dashboard -->
            <Grid Grid.Row="1" Margin="8" Background="{DynamicResource SurfaceContainer}">
                
                <!-- DASHBOARD VIEW: Adaptive Grid Layout -->
                <ScrollViewer x:Name="DashboardScrollViewer" 
                             VerticalScrollBarVisibility="Auto" 
                             HorizontalScrollBarVisibility="Disabled" 
                             Padding="4"
                             Background="Transparent"
                             Visibility="Visible">
                    <UniformGrid x:Name="DashboardGrid" VerticalAlignment="Top">
                        <UniformGrid.Style>
                            <Style TargetType="UniformGrid">
                                <Setter Property="Columns" Value="5"/>
                                <Style.Triggers>
                                    <!-- 4 Spalten für mittlere Bildschirme -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1400}" Value="True">
                                        <Setter Property="Columns" Value="4"/>
                                    </DataTrigger>
                                    <!-- 3 Spalten für kleinere Bildschirme -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1200}" Value="True">
                                        <Setter Property="Columns" Value="3"/>
                                    </DataTrigger>
                                    <!-- 2 Spalten für sehr kleine Bildschirme -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=900}" Value="True">
                                        <Setter Property="Columns" Value="2"/>
                                    </DataTrigger>
                                    <!-- 1 Spalte für mobile Größen -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=600}" Value="True">
                                        <Setter Property="Columns" Value="1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </UniformGrid.Style>
                    </UniformGrid>
                </ScrollViewer>
                
                <!-- Enhanced Welcome Message - Responsive -->
                <Border Visibility="{Binding WelcomeMessageVisibility}" 
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        MaxWidth="800" x:Name="WelcomeBorder">
                    <Border.Style>
                        <Style TargetType="Border" BasedOn="{StaticResource WelcomeHero}">
                            <Style.Triggers>
                                <!-- Kompaktere Welcome Message für kleine Bildschirme -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                    <Setter Property="MaxWidth" Value="600"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    
                    <StackPanel TextBlock.TextAlignment="Center">
                        <!-- Hero Icon - Responsive size WITH ROUND CLIPPING -->
                        <Viewbox x:Name="WelcomeIcon">
                            <Viewbox.Style>
                                <Style TargetType="Viewbox">
                                    <Setter Property="Width" Value="120"/>
                                    <Setter Property="Height" Value="120"/>
                                    <Setter Property="Margin" Value="0,0,0,24"/>
                                    <Style.Triggers>
                                        <!-- Kleineres Icon für kompakte Ansicht -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                            <Setter Property="Width" Value="80"/>
                                            <Setter Property="Height" Value="80"/>
                                            <Setter Property="Margin" Value="0,0,0,16"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Viewbox.Style>
                            <Grid>
                                <!-- Hintergrund-Kreis -->
                                <Ellipse Fill="{DynamicResource Primary}" Width="120" Height="120"/>
                                
                                <!-- RUNDES LOGO MIT ELLIPSE-CLIP -->
                                <Ellipse Width="80" Height="80" 
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,20">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="/Resources/logo.jpeg" 
                                                   Stretch="UniformToFill"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </Viewbox>
                        
                        <!-- Welcome Content - Responsive text -->
                        <TextBlock Text="Willkommen bei Professional v1.9.2!" x:Name="WelcomeTitle"
                                  Foreground="{DynamicResource Primary}" 
                                  Margin="0,0,0,16">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource HeadlineSmall}">
                                    <Style.Triggers>
                                        <!-- Kleinere Überschrift für kompakte Ansicht -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                            <Setter Property="FontSize" Value="20"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <TextBlock x:Name="WelcomeDescription"
                                  Foreground="{DynamicResource OnSurface}" 
                                  LineHeight="28" Margin="0,0,0,32">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BodyLarge}">
                                    <Style.Triggers>
                                        <!-- Kompaktere Beschreibung für kleine Bildschirme -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="LineHeight" Value="20"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <Run Text="Klicken Sie auf"/>
                            <Run Text="+ Team" FontWeight="Bold" Foreground="{DynamicResource Primary}"/>
                            <Run Text="um Ihr erstes Hundeteam hinzuzufügen."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="💡 Klicken Sie auf eine Team-Karte für Details!" FontWeight="Medium"/>
                        </TextBlock>
                        
                        <!-- CTA Button - Responsive -->
                        <Button Command="{Binding AddTeamCommand}" x:Name="WelcomeCTAButton">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource FilledButton}">
                                    <Setter Property="Background" Value="{DynamicResource Success}"/>
                                    <Setter Property="Padding" Value="32,16"/>
                                    <Setter Property="FontSize" Value="16"/>
                                    <Style.Triggers>
                                        <!-- Kompakterer CTA-Button -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                            <Setter Property="Padding" Value="24,12"/>
                                            <Setter Property="FontSize" Value="14"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Plus" Width="18" Height="18" 
                                               Foreground="White" Margin="0,0,12,0"/>
                                <TextBlock Text="Erstes Team hinzufügen" Foreground="White" FontWeight="Medium"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Border>
            </Grid>

            <!-- 📊 Professional Status Bar - Responsive -->
            <Border Grid.Row="2" Background="{DynamicResource Surface}" 
                    BorderBrush="{DynamicResource OutlineVariant}" BorderThickness="0,1,0,0" 
                    Padding="16,8" x:Name="StatusBarBorder">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <!-- Kompaktere Status Bar für kleine Bildschirme -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1000}" Value="True">
                                <Setter Property="Padding" Value="12,6"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                
                <Border.Effect>
                    <DropShadowEffect Color="#C0C0C0" Direction="90" ShadowDepth="1" 
                                    Opacity="0.1" BlurRadius="4"/>
                </Border.Effect>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Status Information - Responsive -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" x:Name="StatusInfoPanel">
                        <Border Background="{DynamicResource SuccessContainer}" CornerRadius="12" 
                               Padding="8,4" Margin="0,0,12,0">
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="CheckCircle" Width="12" Height="12" 
                                               Foreground="{DynamicResource Success}" Margin="0,0,4,0"/>
                                <TextBlock Text="AKTIV" Style="{StaticResource LabelSmall}"
                                          Foreground="{DynamicResource OnSuccessContainer}"/>
                            </StackPanel>
                        </Border>

                        <TextBlock Text="{Binding StatusText}" x:Name="StatusText"
                                  VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BodyMedium}">
                                    <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
                                    <Style.Triggers>
                                        <!-- Ausblenden bei sehr kleinen Bildschirmen -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    
                    <!-- System Log - Responsive -->
                    <TextBlock Text="{Binding LastLogText}" Grid.Column="1" x:Name="SystemLogText"
                              FontFamily="Consolas" 
                              Foreground="{DynamicResource OnSurfaceVariant}"
                              VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource BodySmall}">
                                <Style.Triggers>
                                    <!-- Ausblenden bei kleinen Bildschirmen -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1000}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
        </Grid>

        <!-- Trennlinie zwischen den Bereichen - Responsive -->
        <Border Grid.Column="1" Background="{DynamicResource OutlineVariant}" x:Name="SeparatorBorder">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <!-- Ausblenden bei kleinen Bildschirmen -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1000}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <!-- Rechte Seite: Globale Notizen & Funksprüche - Responsive -->
        <Grid Grid.Column="2" Background="{DynamicResource SurfaceVariant}" x:Name="NotesPanel">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <!-- Ausblenden bei kleinen Bildschirmen -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=1000}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>  <!-- Header -->
                <RowDefinition Height="*"/>     <!-- Notizen/Funksprüche Liste -->
                <RowDefinition Height="Auto"/>  <!-- Eingabefeld -->
            </Grid.RowDefinitions>

            <!-- Header -->
            <Border Grid.Row="0" 
                    Padding="15"
                    CornerRadius="5,5,0,0"
                    Background="{DynamicResource PrimaryGradient}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.Column="0">
                        <TextBlock Text="📝 Notizen &amp; Funksprüche" 
                                   FontSize="18" 
                                   FontWeight="Bold" 
                                   Foreground="{DynamicResource OnPrimary}"/>
                        <TextBlock Text="Einsatzübergreifende Dokumentation" 
                                   FontSize="12" 
                                   Foreground="{DynamicResource OnPrimary}" 
                                   Opacity="0.9"
                                   Margin="0,5,0,0"/>
                    </StackPanel>
                    
                    <!-- Export Log Button -->
                    <Button Grid.Column="1" 
                            Command="{Binding ExportLogCommand}"
                            Background="{DynamicResource Success}"
                            Foreground="{DynamicResource OnSuccess}"
                            BorderThickness="0"
                            Padding="12,8"
                            Cursor="Hand"
                            ToolTip="Einsatz-Log exportieren (nur relevante Daten)">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Download" Width="12" Height="12" 
                                           Foreground="{DynamicResource OnSuccess}" 
                                           Margin="0,0,5,0"/>
                            <TextBlock Text="Log" FontWeight="SemiBold" 
                                      Foreground="{DynamicResource OnSuccess}"/>
                        </StackPanel>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}" 
                                                    CornerRadius="5" 
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                                                  VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource SuccessContainer}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Border>

            <!-- Notizen & Funksprüche Liste -->
            <Border Grid.Row="1" 
                    Background="{DynamicResource Surface}" 
                    BorderBrush="{DynamicResource Outline}" 
                    BorderThickness="1,0,1,1">
                <ScrollViewer x:Name="GlobalNotesScrollViewer" 
                              VerticalScrollBarVisibility="Auto" 
                              HorizontalScrollBarVisibility="Disabled"
                              Padding="8">
                    <ItemsControl ItemsSource="{Binding FilteredNotesCollection}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource SurfaceContainer}" 
                                        BorderBrush="{DynamicResource Outline}" 
                                        BorderThickness="1" 
                                        CornerRadius="8"
                                        Padding="12">
                                    
                                    <!-- Dynamic Margin basierend auf ThreadDepth -->
                                    <Border.Margin>
                                        <MultiBinding Converter="{StaticResource ThreadMarginConverter}">
                                            <Binding Path="ThreadDepth"/>
                                            <Binding Source="0"/>
                                            <Binding Source="0"/>
                                            <Binding Source="8"/>
                                        </MultiBinding>
                                    </Border.Margin>
                                    
                                    <!-- Thread-Indikator Linie für verschachtelte Antworten -->
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <!-- Standard Margin entfernt, da es über MultiBinding gesetzt wird -->
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsReply}" Value="True">
                                                    <Setter Property="BorderThickness" Value="3,1,1,1"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>

                                    <StackPanel>
                                        <!-- Reply-Context Box (nur bei Antworten) -->
                                        <Border Visibility="{Binding IsReply, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                Background="{DynamicResource PrimaryContainer}"
                                                BorderBrush="{DynamicResource Primary}"
                                                BorderThickness="0,0,0,2"
                                                CornerRadius="4"
                                                Padding="8,6"
                                                Margin="0,0,0,8">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="↳ Antwort auf:" 
                                                           FontSize="11" 
                                                           FontWeight="Bold"
                                                           Foreground="{DynamicResource OnPrimaryContainer}"
                                                           Margin="0,0,6,0"/>
                                                <TextBlock Text="{Binding ReplyPreview}" 
                                                           FontSize="11"
                                                           FontStyle="Italic"
                                                           Foreground="{DynamicResource OnPrimaryContainer}"
                                                           TextTrimming="CharacterEllipsis"/>
                                            </StackPanel>
                                        </Border>

                                        <!-- Hauptinhalt -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Grid.Column="0">
                                                <!-- Zeitstempel & Team-Info Header -->
                                                <Grid Margin="0,0,0,8">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    
                                                    <!-- Reply-Indikator -->
                                                    <TextBlock Grid.Column="0"
                                                               Text="{Binding ReplyIcon}"
                                                               FontSize="14"
                                                               FontWeight="Bold"
                                                               Foreground="{DynamicResource Primary}"
                                                               Margin="0,0,8,0"
                                                               VerticalAlignment="Center"
                                                               Visibility="{Binding IsReply, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                    
                                                    <!-- Zeitstempel -->
                                                    <Border Grid.Column="1" 
                                                            Background="{DynamicResource PrimaryContainer}"
                                                            CornerRadius="12"
                                                            Padding="8,4">
                                                        <TextBlock Text="{Binding FormattedTimestamp}" 
                                                                   FontWeight="Bold" 
                                                                   FontFamily="Consolas, Courier New"
                                                                   FontSize="13"
                                                                   Foreground="{DynamicResource OnPrimaryContainer}"/>
                                                    </Border>
                                                    
                                                    <!-- Team Name -->
                                                    <TextBlock Grid.Column="2" 
                                                               Text="{Binding TeamName}" 
                                                               FontSize="12" 
                                                               FontWeight="SemiBold"
                                                               Foreground="{DynamicResource OnSurfaceVariant}" 
                                                               Margin="12,0,0,0"
                                                               VerticalAlignment="Center"/>
                                                    
                                                    <!-- Entry Type Icon -->
                                                    <Border Grid.Column="3"
                                                            Background="{DynamicResource TertiaryContainer}"
                                                            CornerRadius="12"
                                                            Padding="6,3">
                                                        <TextBlock Text="{Binding EntryTypeIcon}" 
                                                                   FontSize="14" 
                                                                   VerticalAlignment="Center"
                                                                   HorizontalAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <!-- Inhalt - GRÖSSER und besser lesbar -->
                                                <TextBlock Text="{Binding Content}" 
                                                           TextWrapping="Wrap" 
                                                           FontSize="14"
                                                           LineHeight="20"
                                                           Foreground="{DynamicResource OnSurface}"
                                                           Margin="0,0,0,8"/>

                                                <!-- Thread-Info (nur bei Root-Nachrichten mit Antworten) -->
                                                <Border Visibility="{Binding HasReplies, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                        Background="{DynamicResource TertiaryContainer}"
                                                        CornerRadius="16"
                                                        Padding="10,6"
                                                        Margin="0,4,0,0"
                                                        HorizontalAlignment="Left">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="💬" 
                                                                   FontSize="14" 
                                                                   Margin="0,0,6,0"
                                                                   VerticalAlignment="Center"/>
                                                        <TextBlock Text="{Binding RepliesCountText}"
                                                                   FontSize="12"
                                                                   FontWeight="SemiBold"
                                                                   Foreground="{DynamicResource OnTertiaryContainer}"/>
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>

                                            <!-- Thread-Entry-Button -->
                                            <Button Grid.Column="1"
                                                    VerticalAlignment="Top"
                                                    Width="36"
                                                    Height="36"
                                                    Margin="12,0,0,0"
                                                    Background="{DynamicResource SecondaryContainer}"
                                                    BorderThickness="1"
                                                    BorderBrush="{DynamicResource Secondary}"
                                                    ToolTip="Thread-Eintrag zu dieser Nachricht hinzufügen"
                                                    Cursor="Hand"
                                                    Tag="{Binding}"
                                                    Click="ReplyButton_Click">
                                                <Button.Content>
                                                    <fa:ImageAwesome Icon="Plus" 
                                                                     Width="14" 
                                                                     Height="14" 
                                                                     Foreground="{DynamicResource OnSecondaryContainer}"/>
                                                </Button.Content>
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Border x:Name="border"
                                                                            Background="{TemplateBinding Background}" 
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="18">
                                                                        <ContentPresenter HorizontalAlignment="Center" 
                                                                                          VerticalAlignment="Center"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Secondary}"/>
                                                                            <Setter Property="Content">
                                                                                <Setter.Value>
                                                                                    <fa:ImageAwesome Icon="Plus" 
                                                                                                     Width="14" 
                                                                                                     Height="14" 
                                                                                                     Foreground="{DynamicResource OnSecondary}"/>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Primary}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Border>

            <!-- Eingabebereich -->
            <Border Grid.Row="2" 
                    Background="{DynamicResource SurfaceContainer}" 
                    BorderBrush="{DynamicResource Outline}" 
                    BorderThickness="1,0,1,1"
                    CornerRadius="0,0,8,8"
                    Padding="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Schnellnotiz Eingabe -->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Verbesserte TextBox mit mehr Padding -->
                        <Border Grid.Column="0"
                                Background="{DynamicResource Surface}"
                                BorderBrush="{DynamicResource Primary}"
                                BorderThickness="2"
                                CornerRadius="8">
                            <TextBox Padding="12,10" 
                                     FontSize="14"
                                     Background="Transparent"
                                     Foreground="{DynamicResource OnSurface}"
                                     BorderThickness="0"
                                     VerticalAlignment="Stretch"
                                     Text="{Binding QuickNoteText, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding AddQuickNoteCommand}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                        </Border>

                        <Button Grid.Column="1" 
                                Content="➕ Hinzufügen" 
                                Padding="16,12"
                                Margin="8,0,0,0"
                                Background="{DynamicResource Primary}"
                                Foreground="{DynamicResource OnPrimary}"
                                BorderThickness="0"
                                FontWeight="SemiBold"
                                FontSize="14"
                                Command="{Binding AddQuickNoteCommand}"
                                Cursor="Hand">
                        </Button>
                    </Grid>

                    <!-- Team-Auswahl für Notiz -->
                    <Border Grid.Row="1"
                            Background="{DynamicResource Surface}"
                            BorderBrush="{DynamicResource Outline}"
                            BorderThickness="1"
                            CornerRadius="8"
                            Margin="0,8,0,0">
                        <ComboBox Margin="0"
                                  Padding="12,10"
                                  Background="Transparent"
                                  Foreground="{DynamicResource OnSurface}"
                                  BorderThickness="0"
                                  FontSize="14"
                                  ItemsSource="{Binding NoteTargets}"
                                  SelectedItem="{Binding SelectedNoteTarget}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DisplayName}" 
                                                   FontWeight="SemiBold" 
                                                   Foreground="{DynamicResource OnSurface}"
                                                   Margin="0,0,10,0"/>
                                        <TextBlock Text="{Binding DetailInfo}" 
                                                   Foreground="{DynamicResource OnSurfaceVariant}" 
                                                   FontSize="12"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</views:BaseThemeWindow>
