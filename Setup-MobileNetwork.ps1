# Einsatz√ºberwachung Mobile - Netzwerk-Konfiguration
# F√ºhren Sie dieses Script als Administrator aus

Write-Host "üîß Einsatz√ºberwachung Mobile - Netzwerk-Setup" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan

# Pr√ºfe Administrator-Rechte
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator"))
{
    Write-Host "‚ùå Fehler: Administrator-Rechte erforderlich!" -ForegroundColor Red
    Write-Host "üí° Rechtsklick auf PowerShell ‚Üí 'Als Administrator ausf√ºhren'" -ForegroundColor Yellow
    Read-Host "Dr√ºcken Sie Enter zum Beenden"
    exit 1
}

Write-Host "‚úÖ Administrator-Rechte erkannt" -ForegroundColor Green

# Erkenne lokale IP-Adresse
$localIP = Get-NetIPAddress -AddressFamily IPv4 | Where-Object {
    $_.IPAddress -match "^192\.168\." -or 
    $_.IPAddress -match "^10\." -or 
    ($_.IPAddress -match "^172\." -and [int]($_.IPAddress.Split('.')[1]) -ge 16 -and [int]($_.IPAddress.Split('.')[1]) -le 31)
} | Select-Object -First 1 -ExpandProperty IPAddress

if (-not $localIP) {
    Write-Host "‚ö†Ô∏è Keine lokale IP-Adresse gefunden, verwende alle Interfaces (*)" -ForegroundColor Yellow
    $localIP = "*"
}
else {
    Write-Host "üåê Erkannte lokale IP: $localIP" -ForegroundColor Green
}

$port = 8080

Write-Host "`nüîß Konfiguriere Windows f√ºr Mobile-Zugriff..." -ForegroundColor Cyan

# 1. HTTP URL Reservation hinzuf√ºgen
Write-Host "`n1Ô∏è‚É£ F√ºge HTTP URL Reservation hinzu..." -ForegroundColor Yellow
$urlReservation = "http://+:$port/"
try {
    netsh http add urlacl url=$urlReservation user=Everyone
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ URL Reservation erfolgreich hinzugef√ºgt: $urlReservation" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è URL Reservation bereits vorhanden oder Fehler beim Hinzuf√ºgen" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Fehler bei URL Reservation: $_" -ForegroundColor Red
}

# 2. Firewall-Regel hinzuf√ºgen
Write-Host "`n2Ô∏è‚É£ F√ºge Windows Firewall-Regel hinzu..." -ForegroundColor Yellow
$ruleName = "Einsatz√ºberwachung Mobile"
try {
    # Pr√ºfe ob Regel bereits existiert
    $existingRule = Get-NetFirewallRule -DisplayName $ruleName -ErrorAction SilentlyContinue
    if ($existingRule) {
        Write-Host "‚ö†Ô∏è Firewall-Regel bereits vorhanden: $ruleName" -ForegroundColor Yellow
    } else {
        New-NetFirewallRule -DisplayName $ruleName -Direction Inbound -Protocol TCP -LocalPort $port -Action Allow
        Write-Host "‚úÖ Firewall-Regel erfolgreich hinzugef√ºgt: $ruleName (Port $port)" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Fehler bei Firewall-Regel: $_" -ForegroundColor Red
    # Fallback mit netsh
    Write-Host "üîÑ Versuche Fallback mit netsh..." -ForegroundColor Yellow
    netsh advfirewall firewall add rule name=$ruleName dir=in action=allow protocol=TCP localport=$port
}

# 3. Netzwerk-Profil pr√ºfen
Write-Host "`n3Ô∏è‚É£ Pr√ºfe Netzwerk-Profil..." -ForegroundColor Yellow
$networkProfile = Get-NetConnectionProfile | Where-Object { $_.NetworkCategory -eq "Public" }
if ($networkProfile) {
    Write-Host "‚ö†Ô∏è √ñffentliches Netzwerk erkannt. F√ºr lokalen Zugriff Private Netzwerk empfohlen." -ForegroundColor Yellow
    Write-Host "üí° Tipp: Windows-Einstellungen ‚Üí Netzwerk ‚Üí Eigenschaften ‚Üí Privat ausw√§hlen" -ForegroundColor Cyan
} else {
    Write-Host "‚úÖ Privates Netzwerk erkannt - optimal f√ºr lokalen Zugriff" -ForegroundColor Green
}

# 4. Port-Test
Write-Host "`n4Ô∏è‚É£ Teste Port-Verf√ºgbarkeit..." -ForegroundColor Yellow
$portTest = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
if ($portTest) {
    Write-Host "‚ö†Ô∏è Port $port wird bereits verwendet von:" -ForegroundColor Yellow
    $portTest | ForEach-Object {
        $processId = $_.OwningProcess
        $processName = (Get-Process -Id $processId -ErrorAction SilentlyContinue).ProcessName
        Write-Host "   - PID $processId ($processName)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚úÖ Port $port ist verf√ºgbar" -ForegroundColor Green
}

# Zusammenfassung
Write-Host "`nüìã Konfiguration abgeschlossen!" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host "‚úÖ HTTP URL Reservation: http://+:$port/" -ForegroundColor Green
Write-Host "‚úÖ Firewall-Regel: $ruleName (Port $port)" -ForegroundColor Green
if ($localIP -ne "*") {
    Write-Host "üåê Lokale IP-Adresse: $localIP" -ForegroundColor Green
    Write-Host "üì± iPhone URL: http://$localIP`:$port/mobile" -ForegroundColor Cyan
}
Write-Host "üíª Desktop URL: http://localhost:$port/mobile" -ForegroundColor Cyan

Write-Host "`nüöÄ N√§chste Schritte:" -ForegroundColor Yellow
Write-Host "1. Starten Sie die Einsatz√ºberwachung-App" -ForegroundColor White
Write-Host "2. √ñffnen Sie 'Mobile Verbindung'" -ForegroundColor White
Write-Host "3. Klicken Sie 'Server starten'" -ForegroundColor White
Write-Host "4. Scannen Sie den QR-Code mit Ihrem iPhone" -ForegroundColor White

Write-Host "`nüí° Bei Problemen:" -ForegroundColor Yellow
Write-Host "- Pr√ºfen Sie die App-Logs im Mobile Connection Window" -ForegroundColor White
Write-Host "- Testen Sie zuerst: http://localhost:$port/debug" -ForegroundColor White
Write-Host "- Stellen Sie sicher, dass beide Ger√§te im gleichen WLAN sind" -ForegroundColor White

Read-Host "`nDr√ºcken Sie Enter zum Beenden"
