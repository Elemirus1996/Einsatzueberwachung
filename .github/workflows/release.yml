name: Release

on:
  workflow_dispatch: # Ermöglicht manuellen Start im "Actions"-Tab auf GitHub
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotent@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release --no-restore

    - name: Setup Inno Setup
      uses: crazy-max/ghaction-inno-setup@v3
      with:
        version: '6.2.2'

    - name: Compile Inno Setup script
      run: iscc "Setup\Einsatzueberwachung_Setup.iss"

    - name: Get installer path
      id: get_installer_path
      run: |
        $installer = Get-ChildItem -Path "Setup/Output" -Filter "*.exe" | Select-Object -First 1
        echo "path=$($installer.FullName)" >> $env:GITHUB_OUTPUT
        echo "name=$($installer.Name)" >> $env:GITHUB_OUTPUT

    - name: Create update-info.json
      id: create_update_info
      shell: powershell
      run: |
        $version = "${{ github.ref_name }}".TrimStart('v')
        $setupFile = Get-Item "${{ steps.get_installer_path.outputs.path }}"
        $fileSize = $setupFile.Length
        $releaseDate = Get-Date -Format "yyyy-MM-dd"
        $repoUrl = "https://github.com/${{ github.repository }}"

        $updateInfo = @{
            version = $version
            releaseDate = $releaseDate
            downloadUrl = "$repoUrl/releases/download/${{ github.ref_name }}/${{ steps.get_installer_path.outputs.name }}"
            releaseNotesUrl = "$repoUrl/releases/tag/${{ github.ref_name }}"
            mandatory = $false
            minimumVersion = "1.7.0"
            fileSize = $fileSize
            releaseNotes = @(
                "🚀 Neue Version $version verfügbar",
                "🔧 Diverse Bugfixes und Performance-Optimierungen",
                "🛡️ Sicherheits-Updates"
            )
        } | ConvertTo-Json -Depth 5

        $updateInfo | Out-File -FilePath "update-info.json" -Encoding UTF8
        echo "path=update-info.json" >> $env:GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          New release of Einsatzueberwachung.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_installer_path.outputs.path }}
        asset_name: ${{ steps.get_installer_path.outputs.name }}
        asset_content_type: application/octet-stream

    - name: Upload update-info.json to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.create_update_info.outputs.path }}
        asset_name: update-info.json
        asset_content_type: application/json
