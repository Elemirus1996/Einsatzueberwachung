name: Release

on:
  workflow_dispatch: # Ermöglicht manuellen Start im "Actions"-Tab auf GitHub
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore Einsatzueberwachung.csproj

    - name: Build application
      run: dotnet build Einsatzueberwachung.csproj --configuration Release --no-restore

    - name: List directory structure (Debug)
      run: |
        Write-Host "=== Root Directory ==="
        Get-ChildItem -Path . -Recurse -Depth 2 | Select-Object FullName
        Write-Host "`n=== Checking bin/Release folder ==="
        if (Test-Path "bin\Release\net8.0-windows") {
          Write-Host "✓ bin\Release\net8.0-windows exists"
          Get-ChildItem "bin\Release\net8.0-windows" | Select-Object Name
        } else {
          Write-Host "✗ bin\Release\net8.0-windows NOT FOUND"
        }

    - name: Download and Install Inno Setup 6.2.2
      run: |
        $InnoSetupUrl = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
        $InstallerPath = "$env:TEMP\innosetup-6.2.2.exe"
        Write-Host "Downloading Inno Setup 6.2.2..."
        Invoke-WebRequest -Uri $InnoSetupUrl -OutFile $InstallerPath
        Write-Host "Installing Inno Setup..."
        Start-Process -FilePath $InstallerPath -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART", "/SP-" -Wait
        Write-Host "Inno Setup installed successfully"

    - name: Compile Inno Setup Script
      run: |
        $IsccPath = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
        if (-not (Test-Path $IsccPath)) {
          Write-Host "Error: ISCC.exe not found at $IsccPath"
          exit 1
        }
        Write-Host "Compiling Inno Setup script..."
        & $IsccPath "Setup\Einsatzueberwachung_Setup.iss"
        if ($LASTEXITCODE -ne 0) {
          Write-Host "Error: Inno Setup compilation failed with exit code $LASTEXITCODE"
          exit 1
        }
        Write-Host "Compilation successful"

    - name: Get installer path
      id: get_installer_path
      run: |
        $installer = Get-ChildItem -Path "Setup/Output" -Filter "*.exe" | Select-Object -First 1
        echo "path=$($installer.FullName)" >> $env:GITHUB_OUTPUT
        echo "name=$($installer.Name)" >> $env:GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          New release of Einsatzueberwachung.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_installer_path.outputs.path }}
        asset_name: ${{ steps.get_installer_path.outputs.name }}
        asset_content_type: application/octet-stream
