<Window x:Class="Einsatzueberwachung.Views.PersonalEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:vm="clr-namespace:Einsatzueberwachung.ViewModels"
        xmlns:views="clr-namespace:Einsatzueberwachung.Views"
        Title="{Binding WindowTitle}"
        Height="700" Width="550"
        WindowStartupLocation="CenterOwner"
        Background="{DynamicResource Surface}"
        ResizeMode="NoResize">

    <!-- DataContext wird Ã¼ber Code-Behind gesetzt -->

    <Window.Resources>
        <!-- Converter als Resource definieren -->
        <views:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        
        <!-- Orange Card Style -->
        <Style x:Key="OrangeEditCard" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource SurfaceContainer}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="{DynamicResource Primary}" 
                                     ShadowDepth="0" BlurRadius="8" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Orange Input Style -->
        <Style x:Key="OrangeInputStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
            <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                         VerticalScrollBarVisibility="Hidden" 
                                         HorizontalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryVariant}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="{DynamicResource Primary}" 
                                                         ShadowDepth="0" BlurRadius="6" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Orange CheckBox Style -->
        <Style x:Key="OrangeCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
            <Setter Property="Margin" Value="0,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="CheckBorder" Width="20" Height="20" 
                                   Background="{DynamicResource SurfaceVariant}"
                                   BorderBrush="{DynamicResource Primary}"
                                   BorderThickness="2" CornerRadius="4" 
                                   Margin="0,0,8,0">
                                <fa:ImageAwesome x:Name="CheckMark" Icon="Check" Width="12" Height="12" 
                                               Foreground="White" Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource Primary}"/>
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource PrimaryVariant}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Orange Button Styles -->
        <Style x:Key="OrangeSaveButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource Primary}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,12"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryVariant}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource OutlineVariant}"/>
                    <Setter Property="Foreground" Value="{DynamicResource OnSurfaceVariant}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OrangeCancelButton" TargetType="Button" BasedOn="{StaticResource OrangeSaveButton}">
            <Setter Property="Background" Value="{DynamicResource SecondaryContainer}"/>
            <Setter Property="Foreground" Value="{DynamicResource OnSecondaryContainer}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Secondary}"/>
                    <Setter Property="Foreground" Value="{DynamicResource OnSecondary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Section Header Style -->
        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
        </Style>

        <!-- Field Label Style -->
        <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{DynamicResource OnSurfaceVariant}"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Orange Header -->
        <Border Grid.Row="0" Background="{DynamicResource PrimaryGradient}" 
                CornerRadius="12" Padding="20" Margin="0,0,0,16">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Orange Icon mit Glow -->
                <Border Grid.Column="0" Width="48" Height="48" CornerRadius="24" 
                       Background="White" Margin="0,0,16,0"
                       Effect="{DynamicResource OrangeGlow}">
                    <fa:ImageAwesome Icon="UserPlus" Width="24" Height="24" 
                                   Foreground="{DynamicResource Primary}"/>
                </Border>

                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock Text="Personal-Daten" FontSize="22" FontWeight="Bold" 
                              Foreground="White"/>
                    <TextBlock Text="Erfassen Sie die Personalinformationen und FÃ¤higkeiten" 
                              FontSize="12" Foreground="White" Opacity="0.9" Margin="0,4,0,0"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Form Content -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <!-- Basis-Informationen -->
                <Border Style="{StaticResource OrangeEditCard}">
                    <StackPanel>
                        <TextBlock Text="Basis-Informationen" Style="{StaticResource SectionHeaderStyle}"/>

                        <TextBlock Text="Vorname *" Style="{StaticResource FieldLabelStyle}"/>
                        <TextBox Text="{Binding Vorname, UpdateSourceTrigger=PropertyChanged}" 
                                Style="{StaticResource OrangeInputStyle}" Margin="0,0,0,16"/>

                        <TextBlock Text="Nachname *" Style="{StaticResource FieldLabelStyle}"/>
                        <TextBox Text="{Binding Nachname, UpdateSourceTrigger=PropertyChanged}" 
                                Style="{StaticResource OrangeInputStyle}" Margin="0,0,0,16"/>

                        <CheckBox Content="Aktiv" IsChecked="{Binding IsActive}"
                                 Style="{StaticResource OrangeCheckBoxStyle}"/>
                    </StackPanel>
                </Border>

                <!-- FÃ¤higkeiten -->
                <Border Style="{StaticResource OrangeEditCard}">
                    <StackPanel>
                        <TextBlock Text="FÃ¤higkeiten" Style="{StaticResource SectionHeaderStyle}"/>
                        <TextBlock Text="WÃ¤hlen Sie eine oder mehrere FÃ¤higkeiten aus:" 
                                  FontSize="12" Foreground="{DynamicResource OnSurfaceVariant}" 
                                  Margin="0,0,0,12" TextWrapping="Wrap"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0">
                                <CheckBox Content="ð HundefÃ¼hrer" IsChecked="{Binding IsHundefuehrer}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                                <CheckBox Content="ð¤ Helfer" IsChecked="{Binding IsHelfer}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                                <CheckBox Content="ð¨âð¼ FÃ¼hrungsassistent" IsChecked="{Binding IsFuehrungsassistent}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                                <CheckBox Content="ð¥ GruppenfÃ¼hrer" IsChecked="{Binding IsGruppenfuehrer}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1">
                                <CheckBox Content="ð Drohnenpilot" IsChecked="{Binding IsDrohnenpilot}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                                <CheckBox Content="â­ ZugfÃ¼hrer" IsChecked="{Binding IsZugfuehrer}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                                <CheckBox Content="ð VerbandsfÃ¼hrer" IsChecked="{Binding IsVerbandsfuehrer}"
                                         Style="{StaticResource OrangeCheckBoxStyle}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Border>

                <!-- Notizen -->
                <Border Style="{StaticResource OrangeEditCard}">
                    <StackPanel>
                        <TextBlock Text="Notizen" Style="{StaticResource SectionHeaderStyle}"/>
                        <TextBox Text="{Binding Notizen, UpdateSourceTrigger=PropertyChanged}" 
                                Style="{StaticResource OrangeInputStyle}" 
                                TextWrapping="Wrap" AcceptsReturn="True" Height="80"
                                VerticalScrollBarVisibility="Auto"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>

        <!-- Validation Message -->
        <Border Grid.Row="2" Background="{DynamicResource ErrorContainer}" 
                CornerRadius="8" Padding="12" Margin="8,8,8,0"
                Visibility="{Binding ValidationMessage, Converter={StaticResource StringToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal">
                <fa:ImageAwesome Icon="ExclamationTriangle" Width="16" Height="16" 
                               Foreground="{DynamicResource OnErrorContainer}" Margin="0,0,8,0"/>
                <TextBlock Text="{Binding ValidationMessage}" 
                          Foreground="{DynamicResource OnErrorContainer}" 
                          FontWeight="Medium" TextWrapping="Wrap"/>
            </StackPanel>
        </Border>

        <!-- Action Buttons -->
        <Border Grid.Row="3" Style="{StaticResource OrangeCard}" Margin="8,8,8,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Reset Button -->
                <Button Grid.Column="0" Content="ð ZurÃ¼cksetzen" 
                       Command="{Binding ResetFormCommand}"
                       Style="{StaticResource OrangeCancelButton}" 
                       Width="130" Height="40" Margin="0,0,8,0"/>

                <!-- Spacer -->
                <Rectangle Grid.Column="1"/>

                <!-- Save Button -->
                <Button Grid.Column="2" Content="â Speichern" 
                       Command="{Binding SaveCommand}"
                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                       Style="{StaticResource OrangeSaveButton}" 
                       Width="120" Height="40" Margin="0,0,8,0"/>

                <!-- Cancel Button -->
                <Button Grid.Column="3" Content="â Abbrechen" 
                       Command="{Binding CancelCommand}"
                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                       Style="{StaticResource OrangeCancelButton}" 
                       Width="120" Height="40"/>
            </Grid>
        </Border>
    </Grid>
</Window>
