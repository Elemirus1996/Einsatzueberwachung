<views:BaseThemeWindow x:Class="Einsatzueberwachung.Views.TeamInputWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:views="clr-namespace:Einsatzueberwachung.Views"
        xmlns:converters="clr-namespace:Einsatzueberwachung.Converters"
        Title="Neues Team hinzufügen" 
        Height="600" Width="550"
        WindowStartupLocation="CenterOwner"
        ResizeMode="CanResize"
        MinHeight="500" MinWidth="400"
        MaxHeight="800" MaxWidth="700"
        Background="{DynamicResource Surface}"
        Icon="pack://application:,,,/Resources/app.ico"
        SizeToContent="Manual">

    <Window.Resources>
        <!-- Responsive Converter -->
        <converters:WidthToBooleanConverter x:Key="WidthToBooleanConverter"/>
        <converters:WidthToVisibilityConverter x:Key="WidthToVisibilityConverter"/>
        <converters:WidthToFontSizeConverter x:Key="WidthToFontSizeConverter"/>
        <converters:WidthToThicknessConverter x:Key="WidthToThicknessConverter"/>
        
        <!-- Team input specific styles using the design system -->
        <Style x:Key="InputCard" TargetType="Border" BasedOn="{StaticResource Card}">
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Padding" Value="24"/>
        </Style>
        
        <!-- Responsive Input Card -->
        <Style x:Key="ResponsiveInputCard" TargetType="Border" BasedOn="{StaticResource InputCard}">
            <Style.Triggers>
                <!-- Kompakteres Layout für kleinere Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                    <Setter Property="Margin" Value="12"/>
                    <Setter Property="Padding" Value="16"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SectionIcon" TargetType="fa:ImageAwesome">
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- Responsive Section Icon -->
        <Style x:Key="ResponsiveSectionIcon" TargetType="fa:ImageAwesome" BasedOn="{StaticResource SectionIcon}">
            <Style.Triggers>
                <!-- Kleinere Icons für kompakte Ansicht -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                    <Setter Property="Width" Value="20"/>
                    <Setter Property="Height" Value="20"/>
                    <Setter Property="Margin" Value="0,0,8,0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TeamInputField" TargetType="TextBox" BasedOn="{StaticResource EnhancedTextField}">
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>
        
        <!-- Responsive Input Field -->
        <Style x:Key="ResponsiveTeamInputField" TargetType="TextBox" BasedOn="{StaticResource TeamInputField}">
            <Style.Triggers>
                <!-- Kompaktere Abstände für kleinere Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                    <Setter Property="Margin" Value="0,0,0,12"/>
                    <Setter Property="Padding" Value="10,8"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TeamComboBox" TargetType="ComboBox" BasedOn="{StaticResource MasterDataComboBox}">
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>
        
        <!-- Responsive ComboBox -->
        <Style x:Key="ResponsiveTeamComboBox" TargetType="ComboBox" BasedOn="{StaticResource TeamComboBox}">
            <Style.Triggers>
                <!-- Kompaktere Abstände für kleinere Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                    <Setter Property="Margin" Value="0,0,0,12"/>
                    <Setter Property="Padding" Value="10,8"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Responsive Section Group -->
        <Style x:Key="ResponsiveSectionGroup" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,0,0,24"/>
            <Style.Triggers>
                <!-- Kompaktere Abstände zwischen Sektionen -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                    <Setter Property="Margin" Value="0,0,0,18"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Responsive Header -->
        <Style x:Key="ResponsiveHeader" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
            <Style.Triggers>
                <!-- Vertikales Layout für sehr schmale Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=450}" Value="True">
                    <Setter Property="Orientation" Value="Vertical"/>
                    <Setter Property="Margin" Value="0,0,0,12"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Responsive Action Buttons -->
        <Style x:Key="ResponsiveActionButton" TargetType="Button">
            <Setter Property="Padding" Value="20,12"/>
            <Style.Triggers>
                <!-- Kompaktere Buttons für kleinere Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                    <Setter Property="Padding" Value="16,10"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border Style="{StaticResource ResponsiveInputCard}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" PanningMode="VerticalOnly">
            <StackPanel x:Name="MainContent">
                <!-- Responsive Header -->
                <StackPanel Style="{StaticResource ResponsiveHeader}" x:Name="HeaderSection">
                    <fa:ImageAwesome Icon="Plus" Style="{StaticResource ResponsiveSectionIcon}"/>
                    <TextBlock Text="Neues Team hinzufügen" 
                              Foreground="{DynamicResource Primary}"
                              FontWeight="SemiBold" x:Name="HeaderText">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource HeadlineMedium}">
                                <Style.Triggers>
                                    <!-- Kleinere Überschrift für kompakte Ansicht -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                        <Setter Property="FontSize" Value="18"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <!-- Team Information Section - Responsive -->
                <StackPanel Style="{StaticResource ResponsiveSectionGroup}">
                    <StackPanel Style="{StaticResource ResponsiveHeader}">
                        <fa:ImageAwesome Icon="Users" Style="{StaticResource ResponsiveSectionIcon}"/>
                        <TextBlock Text="Team-Informationen" 
                                  Foreground="{DynamicResource OnSurface}" x:Name="TeamInfoHeader">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TitleMedium}">
                                    <Style.Triggers>
                                        <!-- Kleinere Zwischenüberschrift für kompakte Ansicht -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                            <Setter Property="FontSize" Value="15"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <!-- Team Name Preview - Read-only display -->
                    <Label Content="Team-Name (automatisch):" Style="{StaticResource FormLabel}"/>
                    <Border Background="{DynamicResource SurfaceVariant}" 
                           CornerRadius="6" 
                           Padding="12,10" 
                           Margin="0,0,0,16"
                           BorderThickness="1"
                           BorderBrush="{DynamicResource Outline}">
                        <TextBlock Text="{Binding TeamName}" 
                                  Foreground="{DynamicResource OnSurfaceVariant}"
                                  FontStyle="Italic"/>
                    </Border>

                    <Label Content="Suchgebiet:" Style="{StaticResource FormLabel}"/>
                    <ComboBox ItemsSource="{Binding AvailableSearchAreas}"
                             SelectedItem="{Binding SelectedSearchArea}"
                             Style="{StaticResource ResponsiveTeamComboBox}"
                             IsEditable="True"
                             Text="{Binding Suchgebiet, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Ellipse Width="12" Height="12" 
                                             Fill="{Binding Color}" 
                                             Margin="0,0,8,0"
                                             VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding Name}" 
                                               FontWeight="Medium" 
                                               Margin="0,0,8,0"
                                               VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding AssignedTeam}" 
                                               Foreground="{DynamicResource OnSurfaceVariant}"
                                               FontSize="12"
                                               VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AssignedTeam}" Value="">
                                                        <Setter Property="Text" Value="(Verfügbar)"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AssignedTeam}" Value="{x:Null}">
                                                        <Setter Property="Text" Value="(Verfügbar)"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <!-- Dog Information Section - Responsive -->
                <StackPanel Style="{StaticResource ResponsiveSectionGroup}">
                    <StackPanel Style="{StaticResource ResponsiveHeader}">
                        <fa:ImageAwesome Icon="Paw" Style="{StaticResource ResponsiveSectionIcon}"/>
                        <TextBlock Text="Hund" 
                                  Foreground="{DynamicResource OnSurface}" x:Name="DogInfoHeader">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TitleMedium}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                            <Setter Property="FontSize" Value="15"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <Label Content="Hund:" Style="{StaticResource FormLabel}"/>
                    <ComboBox ItemsSource="{Binding DogsList}"
                             SelectedItem="{Binding SelectedDog}"
                             Style="{StaticResource ResponsiveTeamComboBox}"
                             IsEditable="True"
                             Text="{Binding HundName, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" FontWeight="Medium" Margin="0,0,8,0"/>
                                    <TextBlock Text="{Binding Rasse}" 
                                              Foreground="{DynamicResource OnSurfaceVariant}"
                                              FontSize="12">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Rasse}" Value="">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsManualEntry}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!-- Dog Info Display -->
                    <TextBlock Text="{Binding DogInfo}"
                              Style="{StaticResource BodySmall}"
                              Foreground="{DynamicResource Success}"
                              Margin="8,0,0,16" 
                              FontStyle="Italic"
                              TextWrapping="Wrap"
                              Visibility="{Binding HasDogInfo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>

                <!-- Personnel Section - Responsive -->
                <StackPanel Style="{StaticResource ResponsiveSectionGroup}">
                    <StackPanel Style="{StaticResource ResponsiveHeader}">
                        <fa:ImageAwesome Icon="User" Style="{StaticResource ResponsiveSectionIcon}"/>
                        <TextBlock Text="Personal" 
                                  Foreground="{DynamicResource OnSurface}" x:Name="PersonnelHeader">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TitleMedium}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                            <Setter Property="FontSize" Value="15"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <Label Content="Hundeführer:" Style="{StaticResource FormLabel}"/>
                    <ComboBox ItemsSource="{Binding PersonalList}"
                             SelectedItem="{Binding SelectedHundefuehrer}"
                             Style="{StaticResource ResponsiveTeamComboBox}"
                             IsEditable="True"
                             Text="{Binding Hundefuehrer, UpdateSourceTrigger=PropertyChanged}"
                             DisplayMemberPath="FullName"/>

                    <Label Content="Helfer (optional):" Style="{StaticResource FormLabel}"/>
                    <ComboBox ItemsSource="{Binding PersonalList}"
                             SelectedItem="{Binding SelectedHelfer}"
                             Style="{StaticResource ResponsiveTeamComboBox}"
                             IsEditable="True"
                             Text="{Binding Helfer, UpdateSourceTrigger=PropertyChanged}"
                             DisplayMemberPath="FullName"/>
                </StackPanel>

                <!-- Team Type Selection - Responsive -->
                <StackPanel Style="{StaticResource ResponsiveSectionGroup}">
                    <StackPanel Style="{StaticResource ResponsiveHeader}">
                        <fa:ImageAwesome Icon="Tags" Style="{StaticResource ResponsiveSectionIcon}"/>
                        <TextBlock Text="Team-Typ" 
                                  Foreground="{DynamicResource OnSurface}" x:Name="TeamTypeHeader">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TitleMedium}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                            <Setter Property="FontSize" Value="15"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <Border Background="{DynamicResource TertiaryContainer}" 
                           CornerRadius="8" 
                           Padding="16" 
                           Margin="0,0,0,12"
                           BorderThickness="1"
                           BorderBrush="{DynamicResource Tertiary}" x:Name="TeamTypeInfoBorder">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <!-- Kompakteres Padding für kleinere Fenster -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                        <Setter Property="Padding" Value="12"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                <fa:ImageAwesome Icon="InfoCircle" Width="16" Height="16" 
                                               Foreground="{DynamicResource OnTertiaryContainer}" 
                                               Margin="0,0,8,0"/>
                                <TextBlock Text="Aktuell ausgewählt:" 
                                          Style="{StaticResource LabelMedium}"
                                          Foreground="{DynamicResource OnTertiaryContainer}"/>
                            </StackPanel>
                            <TextBlock Text="{Binding SelectedTeamTypesDisplay}" 
                                      Style="{StaticResource BodyMedium}"
                                      Foreground="{DynamicResource OnTertiaryContainer}"
                                      FontWeight="Medium"
                                      TextWrapping="Wrap"/>
                        </StackPanel>
                    </Border>

                    <Button Content="Team-Typ wählen" 
                           Command="{Binding SelectTeamTypeCommand}"
                           HorizontalAlignment="Left"
                           x:Name="SelectTeamTypeButton">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource OutlinedButton}">
                                <Setter Property="Padding" Value="16,10"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="border" 
                                                    Background="Transparent" 
                                                    BorderBrush="{DynamicResource Primary}"
                                                    BorderThickness="2"
                                                    CornerRadius="20"
                                                    Padding="{TemplateBinding Padding}">
                                                <StackPanel Orientation="Horizontal" 
                                                           HorizontalAlignment="Center" 
                                                           VerticalAlignment="Center">
                                                    <fa:ImageAwesome Icon="Cog" Width="14" Height="14" 
                                                                   Foreground="{DynamicResource Primary}" 
                                                                   Margin="0,0,8,0"/>
                                                    <ContentPresenter Content="{TemplateBinding Content}"
                                                                    TextElement.Foreground="{DynamicResource Primary}"
                                                                    TextElement.FontWeight="Medium"/>
                                                </StackPanel>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                                                    <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                                                    <Setter Property="Opacity" Value="0.85"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <!-- Kompakterer Button für kleinere Fenster -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=500}" Value="True">
                                        <Setter Property="Padding" Value="12,8"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <!-- Responsive Action Buttons -->
                <StackPanel x:Name="ActionButtonsPanel"
                           HorizontalAlignment="Right" Margin="0,20,0,0">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal"/>
                            <Style.Triggers>
                                <!-- Vertikales Layout für sehr schmale Fenster -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=450}" Value="True">
                                    <Setter Property="Orientation" Value="Vertical"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <Button Content="Abbrechen" 
                           Command="{Binding CancelCommand}"
                           x:Name="CancelButton">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ResponsiveActionButton}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
                                <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
                                <Setter Property="Margin" Value="0,0,12,0"/>
                                <Style.Triggers>
                                    <!-- Vollbreite Buttons im vertikalen Layout -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=Orientation}" Value="Vertical">
                                        <Setter Property="Margin" Value="0,0,0,8"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    
                    <Button x:Name="CreateTeamButton">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ResponsiveActionButton}">
                                <Setter Property="Content" Value="Team erstellen"/>
                                <Setter Property="Background" Value="{DynamicResource Primary}"/>
                                <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
                                <Style.Triggers>
                                    <!-- Wenn keine PreselectedTeamTypes vorhanden sind, zeige anderen Text -->
                                    <DataTrigger Binding="{Binding HasPreselectedTeamTypes}" Value="False">
                                        <Setter Property="Content" Value="Weiter zur Spezialisierung"/>
                                    </DataTrigger>
                                    <!-- Vollbreite Buttons im vertikalen Layout -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=Orientation}" Value="Vertical">
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Command>
                            <Binding Path="CreateTeamCommand"/>
                        </Button.Command>
                        <Button.IsEnabled>
                            <Binding Path="CanCreateTeam"/>
                        </Button.IsEnabled>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" 
                                        Background="{DynamicResource Primary}" 
                                        CornerRadius="20"
                                        Effect="{StaticResource Elevation1}"
                                        Padding="{TemplateBinding Padding}">
                                    <StackPanel Orientation="Horizontal" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center">
                                        <fa:ImageAwesome x:Name="ButtonIcon" Icon="Plus" Width="14" Height="14" 
                                                       Foreground="{DynamicResource OnPrimary}" 
                                                       Margin="0,0,8,0"/>
                                        <ContentPresenter Content="{TemplateBinding Content}"
                                                        TextElement.Foreground="{DynamicResource OnPrimary}"
                                                        TextElement.FontWeight="Medium"/>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <!-- Icon ändern basierend auf HasPreselectedTeamTypes -->
                                    <DataTrigger Binding="{Binding HasPreselectedTeamTypes}" Value="False">
                                        <Setter TargetName="ButtonIcon" Property="Icon" Value="ArrowRight"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                                        <Setter Property="Opacity" Value="0.92"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation1}"/>
                                        <Setter Property="Opacity" Value="0.88"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.38"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Border>
</views:BaseThemeWindow>
