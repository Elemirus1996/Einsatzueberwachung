<views:BaseThemeWindow x:Class="Einsatzueberwachung.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:views="clr-namespace:Einsatzueberwachung.Views"
        xmlns:converters="clr-namespace:Einsatzueberwachung.Converters"
        Title="Einstellungen - Einsatzüberwachung Professional" 
        Height="700" Width="900"
        WindowStartupLocation="CenterOwner"
        ResizeMode="CanResize"
        MinHeight="600" MinWidth="700"
        MaxHeight="1000" MaxWidth="1200"
        Background="{DynamicResource Surface}"
        Icon="pack://application:,,,/Resources/app.ico">

    <Window.Resources>
        <!-- Responsive Converter -->
        <converters:WidthToBooleanConverter x:Key="WidthToBooleanConverter"/>
        <converters:WidthToVisibilityConverter x:Key="WidthToVisibilityConverter"/>
        
        <!-- Settings-specific styles using the design system -->
        <Style x:Key="SettingsCard" TargetType="Border" BasedOn="{StaticResource Card}">
            <Setter Property="Margin" Value="0,0,0,20"/>
            <Setter Property="Padding" Value="24"/>
        </Style>
        
        <!-- Responsive Settings Card -->
        <Style x:Key="ResponsiveSettingsCard" TargetType="Border" BasedOn="{StaticResource SettingsCard}">
            <Style.Triggers>
                <!-- Kompakteres Layout für kleinere Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                    <Setter Property="Padding" Value="16"/>
                    <Setter Property="Margin" Value="0,0,0,16"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CategoryHeader" TargetType="TextBlock" BasedOn="{StaticResource HeadlineMedium}">
            <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        
        <!-- Responsive Category Header -->
        <Style x:Key="ResponsiveCategoryHeader" TargetType="TextBlock" BasedOn="{StaticResource CategoryHeader}">
            <Style.Triggers>
                <!-- Kleinere Überschrift für kompakte Ansicht -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Margin" Value="0,0,0,16"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SettingGroup" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,0,0,24"/>
        </Style>
        
        <!-- Responsive Setting Group -->
        <Style x:Key="ResponsiveSettingGroup" TargetType="StackPanel" BasedOn="{StaticResource SettingGroup}">
            <Style.Triggers>
                <!-- Kompaktere Abstände zwischen Gruppen -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                    <Setter Property="Margin" Value="0,0,0,18"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SettingLabel" TargetType="TextBlock" BasedOn="{StaticResource TitleMedium}">
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        </Style>

        <Style x:Key="SettingDescription" TargetType="TextBlock" BasedOn="{StaticResource BodyMedium}">
            <Setter Property="Foreground" Value="{DynamicResource OnSurfaceVariant}"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="ThemeButton" TargetType="RadioButton">
            <Setter Property="Margin" Value="0,0,16,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" 
                                Background="{DynamicResource SurfaceVariant}"
                                BorderBrush="{DynamicResource Outline}"
                                BorderThickness="2" 
                                CornerRadius="12"
                                Padding="16"
                                MinWidth="120"
                                Height="80">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter x:Name="contentPresenter" 
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                <Setter TargetName="border" Property="Effect" Value="{StaticResource OrangeElevation2}"/>
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource OnPrimaryContainer}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Responsive Theme Button -->
        <Style x:Key="ResponsiveThemeButton" TargetType="RadioButton" BasedOn="{StaticResource ThemeButton}">
            <Style.Triggers>
                <!-- Kompaktere Theme-Buttons für kleinere Fenster -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                    <Setter Property="Margin" Value="0,0,12,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RadioButton">
                                <Border x:Name="border" 
                                        Background="{DynamicResource SurfaceVariant}"
                                        BorderBrush="{DynamicResource Outline}"
                                        BorderThickness="2" 
                                        CornerRadius="8"
                                        Padding="12"
                                        MinWidth="100"
                                        Height="60">
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentPresenter x:Name="contentPresenter" 
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                        <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource OnPrimaryContainer}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TimeSelector" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0,8,0,0"/>
        </Style>
        
        <!-- Responsive Navigation Button - FIXED: Better text fitting -->
        <Style x:Key="ResponsiveNavButton" TargetType="Button" BasedOn="{StaticResource TextButton}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Style.Triggers>
                <!-- Compact navigation for smaller windows -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                    <Setter Property="Padding" Value="10,8"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="MinHeight" Value="36"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="24" x:Name="MainGrid">
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <!-- Kompakterer Margin für kleinere Fenster -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                        <Setter Property="Margin" Value="16"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" MinWidth="150"/>
            <ColumnDefinition Width="24"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Navigation - Responsive -->
        <Border Grid.Column="0" x:Name="NavigationPanel">
            <Border.Style>
                <Style TargetType="Border" BasedOn="{StaticResource Card}">
                    <Setter Property="Padding" Value="16"/>
                    <Style.Triggers>
                        <!-- Ausblenden der Navigation bei sehr kleinen Fenstern -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=750}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <!-- Kompaktere Navigation bei kleineren Fenstern -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                            <Setter Property="Padding" Value="12"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            
            <StackPanel>
                <TextBlock Text="Kategorien" 
                          Foreground="{DynamicResource Primary}"
                          Margin="0,0,0,20" x:Name="CategoriesHeader">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource TitleMedium}">
                            <Style.Triggers>
                                <!-- Kleinere Kategorien-Überschrift -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=800}" Value="True">
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="Margin" Value="0,0,0,16"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                
                <Button Content="🎨 Design und Theme" 
                       Style="{StaticResource ResponsiveNavButton}"
                       Command="{Binding SelectAppearanceCategoryCommand}"/>
                
                <Button Content="⚙️ Allgemeine Einstellungen"
                       Style="{StaticResource ResponsiveNavButton}"
                       Command="{Binding SelectGeneralCategoryCommand}"/>
                
                <Button Content="🔔 Warnungen und Timer"
                       Style="{StaticResource ResponsiveNavButton}"
                       Command="{Binding SelectTimerCategoryCommand}"/>
                
                <Button Content="📱 Mobile Integration"
                       Style="{StaticResource ResponsiveNavButton}"
                       Command="{Binding SelectMobileCategoryCommand}"/>
                
                <Button Content="🔄 Updates und Info"
                       Style="{StaticResource ResponsiveNavButton}"
                       Command="{Binding SelectUpdatesCategoryCommand}"/>
                
                <Button Content="💾 Datenverwaltung"
                       Style="{StaticResource ResponsiveNavButton}"
                       Command="{Binding SelectDataManagementCategoryCommand}"/>
            </StackPanel>
        </Border>

        <!-- Content Area - Responsive -->
        <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto" PanningMode="VerticalOnly" x:Name="ContentScrollViewer">
            <StackPanel>
                <!-- Mobile Navigation for small screens -->
                <Border x:Name="MobileNavigationCard">
                    <Border.Style>
                        <Style TargetType="Border" BasedOn="{StaticResource Card}">
                            <Setter Property="Padding" Value="16"/>
                            <Setter Property="Margin" Value="0,0,0,16"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <!-- Zeigen der mobilen Navigation bei sehr kleinen Fenstern -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=750}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    
                    <StackPanel>
                        <TextBlock Text="Einstellungs-Kategorien" 
                                  Style="{StaticResource TitleMedium}"
                                  Foreground="{DynamicResource Primary}"
                                  Margin="0,0,0,12"/>
                        <WrapPanel>
                            <Button Content="🎨 Design" 
                                   Style="{StaticResource TextButton}"
                                   Command="{Binding SelectAppearanceCategoryCommand}"
                                   Margin="0,0,8,8"/>
                            <Button Content="⚙️ Allgemein"
                                   Style="{StaticResource TextButton}"
                                   Command="{Binding SelectGeneralCategoryCommand}"
                                   Margin="0,0,8,8"/>
                            <Button Content="🔔 Timer"
                                   Style="{StaticResource TextButton}"
                                   Command="{Binding SelectTimerCategoryCommand}"
                                   Margin="0,0,8,8"/>
                            <Button Content="📱 Mobile"
                                   Style="{StaticResource TextButton}"
                                   Command="{Binding SelectMobileCategoryCommand}"
                                   Margin="0,0,8,8"/>
                            <Button Content="🔄 Updates"
                                   Style="{StaticResource TextButton}"
                                   Command="{Binding SelectUpdatesCategoryCommand}"
                                   Margin="0,0,8,8"/>
                            <Button Content="💾 Daten"
                                   Style="{StaticResource TextButton}"
                                   Command="{Binding SelectDataManagementCategoryCommand}"
                                   Margin="0,0,8,8"/>
                        </WrapPanel>
                    </StackPanel>
                </Border>
                
                <!-- Design & Theme Settings - Responsive -->
                <Border Style="{StaticResource ResponsiveSettingsCard}" 
                       Visibility="{Binding IsAppearanceCategorySelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,24">
                            <fa:ImageAwesome Icon="Cog" Width="28" Height="28" 
                                           Foreground="{DynamicResource Primary}" Margin="0,0,12,0"/>
                            <TextBlock Text="Design und Theme" Style="{StaticResource ResponsiveCategoryHeader}"/>
                        </StackPanel>

                        <!-- Theme Mode Selection - Responsive -->
                        <StackPanel Style="{StaticResource ResponsiveSettingGroup}">
                            <TextBlock Text="Theme-Modus" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Wählen Sie zwischen Hell, Dunkel oder automatischem Wechsel basierend auf der Tageszeit."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <StackPanel Margin="0,12,0,0" x:Name="ThemeButtonsPanel">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Orientation" Value="Horizontal"/>
                                        <Style.Triggers>
                                            <!-- Vertikales Layout für sehr schmale Fenster -->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=650}" Value="True">
                                                <Setter Property="Orientation" Value="Vertical"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                
                                <RadioButton Style="{StaticResource ResponsiveThemeButton}"
                                           IsChecked="{Binding IsLightModeSelected}">
                                    <StackPanel>
                                        <fa:ImageAwesome Icon="Circle" Width="24" Height="20" 
                                                       Foreground="{DynamicResource OnSurfaceVariant}" Margin="0,0,0,8"/>
                                        <TextBlock Text="Hell" HorizontalAlignment="Center" 
                                                  Style="{StaticResource LabelMedium}"/>
                                    </StackPanel>
                                </RadioButton>
                                
                                <RadioButton Style="{StaticResource ResponsiveThemeButton}"
                                           IsChecked="{Binding IsDarkModeSelected}">
                                    <StackPanel>
                                        <fa:ImageAwesome Icon="Circle" Width="24" Height="20" 
                                                       Foreground="{DynamicResource OnSurfaceVariant}" Margin="0,0,0,8"/>
                                        <TextBlock Text="Dunkel" HorizontalAlignment="Center" 
                                                  Style="{StaticResource LabelMedium}"/>
                                    </StackPanel>
                                </RadioButton>
                                
                                <RadioButton Style="{StaticResource ResponsiveThemeButton}"
                                           IsChecked="{Binding IsAutoModeSelected}">
                                    <StackPanel>
                                        <fa:ImageAwesome Icon="Refresh" Width="24" Height="20" 
                                                       Foreground="{DynamicResource OnSurfaceVariant}" Margin="0,0,0,8"/>
                                        <TextBlock Text="Automatisch" HorizontalAlignment="Center" 
                                                  Style="{StaticResource LabelMedium}"/>
                                    </StackPanel>
                                </RadioButton>
                            </StackPanel>
                        </StackPanel>

                        <!-- Automatic Theme Times - Responsive Grid -->
                        <StackPanel Style="{StaticResource ResponsiveSettingGroup}"
                                   Visibility="{Binding IsAutoModeSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Automatische Zeiten" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Konfigurieren Sie, wann automatisch zwischen Hell- und Dunkelmodus gewechselt werden soll."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <Grid Margin="0,12,0,0" x:Name="TimeSelectionGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Dunkel-Modus Zeit -->
                                <StackPanel Grid.Column="0" x:Name="DarkModeTimePanel">
                                    <Label Content="Dunkel-Modus ab:" Foreground="{DynamicResource OnSurface}" FontFamily="Segoe UI" FontSize="14" FontWeight="Medium"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                        <ComboBox x:Name="DarkModeHoursCombo"
                                                 SelectedValue="{Binding DarkModeHours}"
                                                 SelectedValuePath="Content"
                                                 Width="70"
                                                 Margin="0,0,8,0"
                                                 Style="{StaticResource {x:Type ComboBox}}">
                                            <ComboBoxItem Content="00"/>
                                            <ComboBoxItem Content="01"/>
                                            <ComboBoxItem Content="02"/>
                                            <ComboBoxItem Content="03"/>
                                            <ComboBoxItem Content="04"/>
                                            <ComboBoxItem Content="05"/>
                                            <ComboBoxItem Content="06"/>
                                            <ComboBoxItem Content="07"/>
                                            <ComboBoxItem Content="08"/>
                                            <ComboBoxItem Content="09"/>
                                            <ComboBoxItem Content="10"/>
                                            <ComboBoxItem Content="11"/>
                                            <ComboBoxItem Content="12"/>
                                            <ComboBoxItem Content="13"/>
                                            <ComboBoxItem Content="14"/>
                                            <ComboBoxItem Content="15"/>
                                            <ComboBoxItem Content="16"/>
                                            <ComboBoxItem Content="17"/>
                                            <ComboBoxItem Content="18"/>
                                            <ComboBoxItem Content="19"/>
                                            <ComboBoxItem Content="20"/>
                                            <ComboBoxItem Content="21"/>
                                            <ComboBoxItem Content="22"/>
                                            <ComboBoxItem Content="23"/>
                                        </ComboBox>
                                        
                                        <TextBlock Text=":" 
                                                  VerticalAlignment="Center" 
                                                  FontSize="16" 
                                                  FontWeight="Bold"
                                                  Foreground="{DynamicResource OnSurface}"
                                                  Margin="0,0,8,0"/>
                                        
                                        <ComboBox x:Name="DarkModeMinutesCombo"
                                                 SelectedValue="{Binding DarkModeMinutes}"
                                                 SelectedValuePath="Content"
                                                 Width="70"
                                                 Style="{StaticResource {x:Type ComboBox}}">
                                            <ComboBoxItem Content="00"/>
                                            <ComboBoxItem Content="05"/>
                                            <ComboBoxItem Content="10"/>
                                            <ComboBoxItem Content="15"/>
                                            <ComboBoxItem Content="20"/>
                                            <ComboBoxItem Content="25"/>
                                            <ComboBoxItem Content="30"/>
                                            <ComboBoxItem Content="35"/>
                                            <ComboBoxItem Content="40"/>
                                            <ComboBoxItem Content="45"/>
                                            <ComboBoxItem Content="50"/>
                                            <ComboBoxItem Content="55"/>
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                                
                                <!-- Hell-Modus Zeit -->
                                <StackPanel Grid.Column="2" x:Name="LightModeTimePanel">
                                    <Label Content="Hell-Modus ab:" Foreground="{DynamicResource OnSurface}" FontFamily="Segoe UI" FontSize="14" FontWeight="Medium"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                        <ComboBox x:Name="LightModeHoursCombo"
                                                 SelectedValue="{Binding LightModeHours}"
                                                 SelectedValuePath="Content"
                                                 Width="70"
                                                 Margin="0,0,8,0"
                                                 Style="{StaticResource {x:Type ComboBox}}">
                                            <ComboBoxItem Content="00"/>
                                            <ComboBoxItem Content="01"/>
                                            <ComboBoxItem Content="02"/>
                                            <ComboBoxItem Content="03"/>
                                            <ComboBoxItem Content="04"/>
                                            <ComboBoxItem Content="05"/>
                                            <ComboBoxItem Content="06"/>
                                            <ComboBoxItem Content="07"/>
                                            <ComboBoxItem Content="08"/>
                                            <ComboBoxItem Content="09"/>
                                            <ComboBoxItem Content="10"/>
                                            <ComboBoxItem Content="11"/>
                                            <ComboBoxItem Content="12"/>
                                            <ComboBoxItem Content="13"/>
                                            <ComboBoxItem Content="14"/>
                                            <ComboBoxItem Content="15"/>
                                            <ComboBoxItem Content="16"/>
                                            <ComboBoxItem Content="17"/>
                                            <ComboBoxItem Content="18"/>
                                            <ComboBoxItem Content="19"/>
                                            <ComboBoxItem Content="20"/>
                                            <ComboBoxItem Content="21"/>
                                            <ComboBoxItem Content="22"/>
                                            <ComboBoxItem Content="23"/>
                                        </ComboBox>
                                        
                                        <TextBlock Text=":" 
                                                  VerticalAlignment="Center" 
                                                  FontSize="16" 
                                                  FontWeight="Bold"
                                                  Foreground="{DynamicResource OnSurface}"
                                                  Margin="0,0,8,0"/>
                                        
                                        <ComboBox x:Name="LightModeMinutesCombo"
                                                 SelectedValue="{Binding LightModeMinutes}"
                                                 SelectedValuePath="Content"
                                                 Width="70"
                                                 Style="{StaticResource {x:Type ComboBox}}">
                                            <ComboBoxItem Content="00"/>
                                            <ComboBoxItem Content="05"/>
                                            <ComboBoxItem Content="10"/>
                                            <ComboBoxItem Content="15"/>
                                            <ComboBoxItem Content="20"/>
                                            <ComboBoxItem Content="25"/>
                                            <ComboBoxItem Content="30"/>
                                            <ComboBoxItem Content="35"/>
                                            <ComboBoxItem Content="40"/>
                                            <ComboBoxItem Content="45"/>
                                            <ComboBoxItem Content="50"/>
                                            <ComboBoxItem Content="55"/>
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                        <!-- Animation Settings -->
                        <StackPanel Style="{StaticResource ResponsiveSettingGroup}">
                            <TextBlock Text="Animationen" Style="{StaticResource SettingLabel}"/>
                            <CheckBox Content="Theme-Wechsel-Animationen aktivieren"
                                     IsChecked="{Binding EnableAnimations}"
                                     Style="{StaticResource {x:Type CheckBox}}"
                                     Margin="0,8,0,0"/>
                        </StackPanel>

                        <!-- Current Theme Status -->
                        <Border Background="{DynamicResource SurfaceVariant}" 
                               CornerRadius="8" Padding="16" Margin="0,16,0,0">
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Check" Width="16" Height="16" 
                                               Foreground="{DynamicResource Primary}" Margin="0,0,8,0"/>
                                <TextBlock Text="{Binding CurrentThemeStatus}" 
                                          Style="{StaticResource BodyMedium}"
                                          Foreground="{DynamicResource OnSurfaceVariant}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>

                <!-- General Settings -->
                <Border Style="{StaticResource SettingsCard}"
                       Visibility="{Binding IsGeneralCategorySelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,24">
                            <fa:ImageAwesome Icon="Cogs" Width="28" Height="28" 
                                           Foreground="{DynamicResource Primary}" Margin="0,0,12,0"/>
                            <TextBlock Text="Allgemeine Einstellungen" Style="{StaticResource CategoryHeader}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Anwendungsverhalten" Style="{StaticResource SettingLabel}"/>
                            <CheckBox Content="Beim Start automatisch wiederherstellen"
                                     IsChecked="{Binding AutoRestore}"
                                     Margin="0,8,0,8"/>
                            <CheckBox Content="Vollbild-Modus bei großen Displays"
                                     IsChecked="{Binding AutoFullscreen}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Erweitert" Style="{StaticResource SettingLabel}"/>
                            <CheckBox Content="Debug-Modus aktivieren"
                                     IsChecked="{Binding EnableDebugMode}"
                                     Margin="0,8,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- Timer Settings -->
                <Border Style="{StaticResource SettingsCard}"
                       Visibility="{Binding IsTimerCategorySelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,24">
                            <fa:ImageAwesome Icon="Refresh" Width="28" Height="28" 
                                           Foreground="{DynamicResource Primary}" Margin="0,0,12,0"/>
                            <TextBlock Text="Warnungen und Timer" Style="{StaticResource CategoryHeader}"/>
                        </StackPanel>

                        <TextBlock Text="Timer-Einstellungen werden über die jeweiligen Team-Dialoge konfiguriert." 
                                  Style="{StaticResource BodyMedium}"
                                  Foreground="{DynamicResource OnSurfaceVariant}"/>
                    </StackPanel>
                </Border>

                <!-- Mobile Settings -->
                <Border Style="{StaticResource SettingsCard}"
                       Visibility="{Binding IsMobileCategorySelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,24">
                            <fa:ImageAwesome Icon="Mobile" Width="28" Height="28" 
                                           Foreground="{DynamicResource Primary}" Margin="0,0,12,0"/>
                            <TextBlock Text="Mobile Integration" Style="{StaticResource CategoryHeader}"/>
                        </StackPanel>

                        <TextBlock Text="Mobile Einstellungen werden über das Mobile Verbindungs-Fenster konfiguriert." 
                                  Style="{StaticResource BodyMedium}"
                                  Foreground="{DynamicResource OnSurfaceVariant}"/>
                        
                        <Button Content="📱 Mobile Verbindung öffnen"
                               Style="{StaticResource OutlinedButton}"
                               Command="{Binding OpenMobileConnectionCommand}"
                               HorizontalAlignment="Left"
                               Margin="0,16,0,0"
                               Padding="16,10"/>
                    </StackPanel>
                </Border>

                <!-- Updates Settings -->
                <Border Style="{StaticResource SettingsCard}"
                       Visibility="{Binding IsUpdatesCategorySelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,24">
                            <fa:ImageAwesome Icon="Refresh" Width="28" Height="28" 
                                           Foreground="{DynamicResource Primary}" Margin="0,0,12,0"/>
                            <TextBlock Text="Updates und Informationen" Style="{StaticResource CategoryHeader}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Update-Prüfung" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Überprüfen Sie manuell auf verfügbare Updates oder konfigurieren Sie automatische Update-Benachrichtigungen."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                                <Button Content="🔄 Jetzt nach Updates suchen"
                                       Style="{StaticResource FilledButton}"
                                       Command="{Binding CheckForUpdatesCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"
                                       Margin="0,0,12,0"/>
                                
                                <Button Content="ℹ️ Aktuelle Version anzeigen"
                                       Style="{StaticResource OutlinedButton}"
                                       Command="{Binding OpenAboutCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Update-Einstellungen" Style="{StaticResource SettingLabel}"/>
                            <CheckBox Content="Automatisch beim Start nach Updates suchen"
                                     IsChecked="{Binding EnableUpdateNotifications}"
                                     Margin="0,8,0,8"/>
                            <CheckBox Content="Beta-Versionen einschließen (Entwickler)"
                                     IsChecked="{Binding CheckForBetaUpdates}"
                                     Margin="0,0,0,8"/>
                            <CheckBox Content="Update-Benachrichtigungen während Einsätzen anzeigen"
                                     IsChecked="{Binding ShowUpdatesInMission}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Support und Hilfe" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Erhalten Sie Hilfe und Informationen zur Anwendung."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                                <Button Content="❓ Hilfe öffnen"
                                       Style="{StaticResource OutlinedButton}"
                                       Command="{Binding OpenHelpCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"
                                       Margin="0,0,12,0"/>
                                
                                <Button Content="🌐 GitHub Repository"
                                       Style="{StaticResource TextButton}"
                                       Click="OpenGitHubRepository_Click"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Version Info Display -->
                        <Border Background="{DynamicResource SurfaceVariant}" 
                               CornerRadius="8" Padding="16" Margin="0,16,0,0">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                    <fa:ImageAwesome Icon="Info" Width="16" Height="16" 
                                                   Foreground="{DynamicResource Primary}" Margin="0,0,8,0"/>
                                    <TextBlock Text="Versions-Information" 
                                              Style="{StaticResource TitleMedium}"
                                              Foreground="{DynamicResource OnSurfaceVariant}"/>
                                </StackPanel>
                                <TextBlock Text="{Binding AppVersion}" 
                                          Style="{StaticResource BodyMedium}"
                                          Foreground="{DynamicResource OnSurfaceVariant}"
                                          Margin="0,0,0,4"/>
                                <TextBlock Text="Entwickelt von RescueDog_SW für professionelle Einsatzüberwachung" 
                                          Style="{StaticResource LabelSmall}"
                                          Foreground="{DynamicResource OnSurfaceVariant}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>

                <!-- Data Management Settings -->
                <Border Style="{StaticResource SettingsCard}"
                       Visibility="{Binding IsDataManagementCategorySelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,24">
                            <fa:ImageAwesome Icon="Database" Width="28" Height="28" 
                                           Foreground="{DynamicResource Primary}" Margin="0,0,12,0"/>
                            <TextBlock Text="Datenverwaltung" Style="{StaticResource CategoryHeader}"/>
                        </StackPanel>

                        <!-- Stammdaten Management -->
                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Stammdaten verwalten" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Verwalten Sie Personal- und Hundedaten für die Einsatzüberwachung."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <Button Content="📋 Stammdaten öffnen"
                                   Style="{StaticResource FilledButton}"
                                   Command="{Binding OpenMasterDataCommand}"
                                   HorizontalAlignment="Left"
                                   Padding="16,10"
                                   Margin="0,12,0,0"/>
                        </StackPanel>

                        <!-- Statistics -->
                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Statistiken und Auswertungen" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Zeigen Sie detaillierte Statistiken über Teams, Einsätze und Leistungen an."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <Button Content="📊 Statistiken anzeigen"
                                   Style="{StaticResource OutlinedButton}"
                                   Command="{Binding OpenStatisticsCommand}"
                                   HorizontalAlignment="Left"
                                   Padding="16,10"
                                   Margin="0,12,0,0"/>
                        </StackPanel>

                        <!-- Export Functions -->
                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Export und Berichte" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Exportieren Sie Einsatzprotokolle, Statistiken und Berichte in verschiedene Formate."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,12,0,0" x:Name="ExportButtonsPanel">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Orientation" Value="Horizontal"/>
                                        <Style.Triggers>
                                            <!-- Vertikales Layout für sehr schmale Fenster -->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=700}" Value="True">
                                                <Setter Property="Orientation" Value="Vertical"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                
                                <Button Content="📄 PDF-Export"
                                       Style="{StaticResource FilledButton}"
                                       Command="{Binding OpenPdfExportCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"
                                       Margin="0,0,12,8"/>
                                
                                <Button Content="📈 Teams-Statistik"
                                       Style="{StaticResource OutlinedButton}"
                                       Command="{Binding ExportTeamsStatistikCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"
                                       Margin="0,0,12,8"/>
                                
                                <Button Content="💾 Vollständiger Export"
                                       Style="{StaticResource TextButton}"
                                       Command="{Binding ExportVollstaendigCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"
                                       Margin="0,0,0,8"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Data Management Tools -->
                        <StackPanel Style="{StaticResource SettingGroup}">
                            <TextBlock Text="Datentools" Style="{StaticResource SettingLabel}"/>
                            <TextBlock Text="Zusätzliche Tools für die Datenverwaltung und -sicherung."
                                      Style="{StaticResource SettingDescription}"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                                <Button Content="🗑️ Temporäre Dateien bereinigen"
                                       Style="{StaticResource TextButton}"
                                       Command="{Binding CleanupTempFilesCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"
                                       Margin="0,0,12,0"/>
                                
                                <Button Content="📝 Globale Notizen exportieren"
                                       Style="{StaticResource TextButton}"
                                       Command="{Binding ExportGlobaleNotizenCommand}"
                                       HorizontalAlignment="Left"
                                       Padding="16,10"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Data Management Status -->
                        <Border Background="{DynamicResource SurfaceVariant}" 
                               CornerRadius="8" Padding="16" Margin="0,16,0,0">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                    <fa:ImageAwesome Icon="Info" Width="16" Height="16" 
                                                   Foreground="{DynamicResource Primary}" Margin="0,0,8,0"/>
                                    <TextBlock Text="Datenverwaltung-Status" 
                                              Style="{StaticResource TitleMedium}"
                                              Foreground="{DynamicResource OnSurfaceVariant}"/>
                                </StackPanel>
                                <TextBlock Text="Alle Datenverwaltungsfunktionen sind verfügbar und bereit." 
                                          Style="{StaticResource BodyMedium}"
                                          Foreground="{DynamicResource OnSurfaceVariant}"
                                          Margin="0,0,0,4"/>
                                <TextBlock Text="Stammdaten, Export und Statistiken können über die entsprechenden Schaltflächen geöffnet werden." 
                                          Style="{StaticResource LabelSmall}"
                                          Foreground="{DynamicResource OnSurfaceVariant}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>

        <!-- Responsive Action Buttons -->
        <StackPanel Grid.Column="2" VerticalAlignment="Bottom" 
                   Margin="0,24,0,0" x:Name="ActionButtonsContainer">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Style.Triggers>
                        <!-- Vollbreite Layout für kleine Fenster -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource WidthToBooleanConverter}, ConverterParameter=650}" Value="True">
                            <Setter Property="Orientation" Value="Vertical"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            
            <Button Content="Abbrechen" 
                   Command="{Binding CancelCommand}"
                   x:Name="CancelActionButton">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource OutlinedButton}">
                        <Setter Property="Padding" Value="20,12"/>
                        <Setter Property="Margin" Value="0,0,12,0"/>
                        <Setter Property="MinWidth" Value="100"/>
                        <Setter Property="Width" Value="Auto"/>
                        <Style.Triggers>
                            <!-- Vollbreite Buttons im vertikalen Layout -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=Orientation}" Value="Vertical">
                                <Setter Property="Margin" Value="0,0,0,8"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Content="Speichern" 
                   Command="{Binding SaveCommand}"
                   x:Name="SaveActionButton">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource FilledButton}">
                        <Setter Property="Padding" Value="20,12"/>
                        <Setter Property="MinWidth" Value="120"/>
                        <Setter Property="Width" Value="Auto"/>
                        <Style.Triggers>
                            <!-- Vollbreite Buttons im vertikalen Layout -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=Orientation}" Value="Vertical">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{DynamicResource Primary}" 
                                CornerRadius="20"
                                Effect="{StaticResource Elevation1}"
                                Padding="{TemplateBinding Padding}">
                            <StackPanel Orientation="Horizontal" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center">
                                <fa:ImageAwesome Icon="Save" Width="16" Height="16" 
                                               Foreground="{DynamicResource OnPrimary}" 
                                               Margin="0,0,8,0"/>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                TextElement.Foreground="{DynamicResource OnPrimary}"
                                                TextElement.FontWeight="Medium"
                                                VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                                <Setter Property="Opacity" Value="0.92"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation1}"/>
                                <Setter Property="Opacity" Value="0.88"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.38"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
    </Grid>
</views:BaseThemeWindow>
