<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- 🎨 UNIFIED DESIGN SYSTEM v5.0 - Clean & Simplified -->
    <!-- Fully integrated with UnifiedThemeManager for seamless theme switching -->
    <!-- All colors are dynamically managed by UnifiedThemeManager -->

    <!-- ========================================= -->
    <!-- 🎯 PLACEHOLDER COLORS - Overridden by UnifiedThemeManager -->
    <!-- These serve as fallbacks and intellisense helpers -->
    <!-- ========================================= -->

    <!-- Primary Orange System -->
    <SolidColorBrush x:Key="Primary" Color="#F57C00"/>
    <SolidColorBrush x:Key="PrimaryContainer" Color="#FFE0B2"/>
    <SolidColorBrush x:Key="OnPrimary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnPrimaryContainer" Color="#E65100"/>

    <!-- Secondary System -->
    <SolidColorBrush x:Key="Secondary" Color="#455A64"/>
    <SolidColorBrush x:Key="SecondaryContainer" Color="#CFD8DC"/>
    <SolidColorBrush x:Key="OnSecondary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnSecondaryContainer" Color="#263238"/>

    <!-- Tertiary System -->
    <SolidColorBrush x:Key="Tertiary" Color="#FF9800"/>
    <SolidColorBrush x:Key="TertiaryContainer" Color="#FFF3E0"/>
    <SolidColorBrush x:Key="OnTertiary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnTertiaryContainer" Color="#F57C00"/>

    <!-- Surface System -->
    <SolidColorBrush x:Key="Surface" Color="#FEFEFE"/>
    <SolidColorBrush x:Key="SurfaceVariant" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="SurfaceContainer" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="SurfaceContainerHigh" Color="#EBEBEB"/>
    <SolidColorBrush x:Key="SurfaceContainerHighest" Color="#E5E5E5"/>
    <SolidColorBrush x:Key="OnSurface" Color="#1A1C1E"/>
    <SolidColorBrush x:Key="OnSurfaceVariant" Color="#44474A"/>

    <!-- Outline System -->
    <SolidColorBrush x:Key="Outline" Color="#74777A"/>
    <SolidColorBrush x:Key="OutlineVariant" Color="#C4C7CA"/>

    <!-- Semantic Colors -->
    <SolidColorBrush x:Key="Success" Color="#4CAF50"/>
    <SolidColorBrush x:Key="SuccessContainer" Color="#E8F5E8"/>
    <SolidColorBrush x:Key="OnSuccess" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnSuccessContainer" Color="#2E7D32"/>

    <SolidColorBrush x:Key="Warning" Color="#FF9800"/>
    <SolidColorBrush x:Key="WarningContainer" Color="#FFF3E0"/>
    <SolidColorBrush x:Key="OnWarning" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnWarningContainer" Color="#E65100"/>

    <SolidColorBrush x:Key="Error" Color="#F44336"/>
    <SolidColorBrush x:Key="ErrorContainer" Color="#FFEBEE"/>
    <SolidColorBrush x:Key="OnError" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnErrorContainer" Color="#C62828"/>

    <!-- Emergency Team Colors -->
    <SolidColorBrush x:Key="FlächeColor" Color="#2196F3"/>
    <SolidColorBrush x:Key="TrümmerColor" Color="#F57C00"/>
    <SolidColorBrush x:Key="MantrailerColor" Color="#4CAF50"/>
    <SolidColorBrush x:Key="WasserColor" Color="#00BCD4"/>
    <SolidColorBrush x:Key="LawineColor" Color="#9C27B0"/>
    <SolidColorBrush x:Key="GeländeColor" Color="#795548"/>
    <SolidColorBrush x:Key="LeichenColor" Color="#607D8B"/>
    <SolidColorBrush x:Key="AllgemeinColor" Color="#FF9800"/>

    <!-- Gradients -->
    <LinearGradientBrush x:Key="PrimaryGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FFE0B2" Offset="0"/>
        <GradientStop Color="#FFCC80" Offset="1"/>
    </LinearGradientBrush>

    <!-- ========================================= -->
    <!-- 🌊 ANIMATION SETTINGS -->
    <!-- ========================================= -->
    <Duration x:Key="ThemeTransitionDuration">0:0:0.3</Duration>
    <sys:Boolean x:Key="EnableAnimations">True</sys:Boolean>

    <!-- ========================================= -->
    <!-- 🔘 ELEVATION & SHADOW SYSTEM -->
    <!-- ========================================= -->
    <DropShadowEffect x:Key="Elevation0" Color="Transparent" BlurRadius="0" ShadowDepth="0" Opacity="0"/>
    <DropShadowEffect x:Key="Elevation1" Color="Black" BlurRadius="3" ShadowDepth="1" Opacity="0.12"/>
    <DropShadowEffect x:Key="Elevation2" Color="Black" BlurRadius="6" ShadowDepth="2" Opacity="0.16"/>
    <DropShadowEffect x:Key="Elevation3" Color="Black" BlurRadius="10" ShadowDepth="3" Opacity="0.19"/>
    <DropShadowEffect x:Key="Elevation4" Color="Black" BlurRadius="14" ShadowDepth="4" Opacity="0.25"/>
    <DropShadowEffect x:Key="Elevation5" Color="Black" BlurRadius="20" ShadowDepth="5" Opacity="0.30"/>

    <!-- Orange-specific elevations -->
    <DropShadowEffect x:Key="OrangeElevation1" Color="#F57C00" BlurRadius="4" ShadowDepth="1" Opacity="0.15"/>
    <DropShadowEffect x:Key="OrangeElevation2" Color="#F57C00" BlurRadius="8" ShadowDepth="2" Opacity="0.20"/>
    <DropShadowEffect x:Key="OrangeElevation3" Color="#F57C00" BlurRadius="12" ShadowDepth="3" Opacity="0.25"/>
    <DropShadowEffect x:Key="OrangeGlow" Color="#F57C00" BlurRadius="6" ShadowDepth="0" Opacity="0.3"/>

    <!-- ========================================= -->
    <!-- 📝 TYPOGRAPHY SYSTEM - Material Design 3 -->
    <!-- ========================================= -->

    <!-- Display Typography -->
    <Style x:Key="DisplayLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="57"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="64"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="DisplayMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="45"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="52"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="DisplaySmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="44"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <!-- Headline Typography -->
    <Style x:Key="HeadlineLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="40"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="HeadlineMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="36"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="HeadlineSmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="32"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <!-- Title Typography -->
    <Style x:Key="TitleLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="28"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="TitleMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="TitleSmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <!-- Label Typography -->
    <Style x:Key="LabelLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="LabelMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="LabelSmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <!-- Body Typography -->
    <Style x:Key="BodyLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="BodyMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style x:Key="BodySmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <!-- ========================================= -->
    <!-- 🎯 GLOBAL COMPONENT DEFAULTS -->
    <!-- Automatic theme-aware styling for all basic components -->
    <!-- ========================================= -->

    <!-- Universal TextBlock styling -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>

    <!-- Universal Label styling -->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- ========================================= -->
    <!-- 🔘 FORM CONTROLS - Enhanced & Theme-Aware -->
    <!-- ========================================= -->

    <!-- Global RadioButton Style -->
    <Style TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,0,16,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButton" Grid.Column="0" 
                                Width="20" Height="20" 
                                Background="{DynamicResource Surface}"
                                BorderBrush="{DynamicResource OnSurfaceVariant}"
                                BorderThickness="2" 
                                CornerRadius="10"
                                VerticalAlignment="Center"
                                Margin="0,0,8,0">
                            <Ellipse x:Name="optionMark" 
                                   Width="10" Height="10" 
                                   Fill="{DynamicResource Primary}"
                                   Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" 
                                        VerticalAlignment="Center"
                                        TextElement.Foreground="{DynamicResource OnSurface}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="radioButton" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="radioButton" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="radioButton" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="radioButton" Property="Background" Value="{DynamicResource SurfaceVariant}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Global CheckBox Style -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,0,16,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Grid.Column="0" 
                                Width="20" Height="20" 
                                Background="{DynamicResource Surface}"
                                BorderBrush="{DynamicResource OnSurfaceVariant}"
                                BorderThickness="2" 
                                CornerRadius="4"
                                VerticalAlignment="Center"
                                Margin="0,0,8,0">
                            <Path x:Name="checkMark" 
                                  Data="M1,4.5 L4,7.5 L9,1.5" 
                                  Stroke="{DynamicResource OnPrimary}"
                                  StrokeThickness="2"
                                  Visibility="Collapsed"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" 
                                        VerticalAlignment="Center"
                                        TextElement.Foreground="{DynamicResource OnSurface}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="checkBoxBorder" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource SurfaceVariant}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- 📝 TEXT INPUT CONTROLS - FIXED FOR VISIBILITY -->
    <!-- Using proven approach from StartWindow -->
    <!-- ========================================= -->

    <!-- TextField Style - Base style for text inputs -->
    <Style x:Key="TextField" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionOpacity" Value="0.3"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Global TextBox Style - SIMPLIFIED & WORKING -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionOpacity" Value="0.3"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- NO CUSTOM TEMPLATE - Use native WPF template for reliability -->
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Enhanced TextBox Style - Same simplified approach -->
    <Style x:Key="EnhancedTextField" TargetType="TextBox">
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="12,12"/>
        <!-- DYNAMISCHE Farben für korrekte Theme-Unterstützung -->
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionOpacity" Value="0.3"/>
        <!-- Layout-Einstellungen -->
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <!-- Scrollviewer-Optimierungen -->
        <Setter Property="ScrollViewer.PanningMode" Value="None"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <!-- Style für den Border -->
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Time Input TextBox - Simplified -->
    <Style x:Key="TimeInputTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontFamily" Value="Consolas, 'Courier New', monospace"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="SelectionOpacity" Value="0.3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Height" Value="60"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                <Setter Property="Foreground" Value="{DynamicResource OnPrimaryContainer}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ========================================= -->
    <!-- 📋 DROPDOWN CONTROLS - DARK MODE COMPATIBLE -->
    <!-- Using the proven working approach from StartWindow -->
    <!-- ========================================= -->

    <!-- Global ComboBox Style - FULL TEMPLATE for Dark Mode Support -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="ScrollViewer.IsManipulationEnabled" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- Full Template for proper Dark Mode support -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="6">
                                        <Grid HorizontalAlignment="Right" Width="20" Margin="8,0">
                                            <Path x:Name="Arrow" 
                                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource OnSurface}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SurfaceVariant}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SurfaceContainerHigh}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        TextElement.Foreground="{DynamicResource OnSurface}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                               Style="{x:Null}"
                               Background="Transparent"
                               Foreground="{DynamicResource OnSurface}"
                               BorderThickness="0"
                               CaretBrush="{DynamicResource Primary}"
                               SelectionBrush="{DynamicResource Primary}"
                               SelectionOpacity="0.3"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="{TemplateBinding Padding}"
                               Focusable="True"
                               Visibility="Hidden"
                               IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="PART_Popup" 
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True" 
                             Focusable="False"
                             PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="200">
                                <Border Background="{DynamicResource Surface}"
                                      BorderBrush="{DynamicResource Primary}" 
                                      BorderThickness="2"
                                      CornerRadius="6"
                                      Effect="{StaticResource Elevation4}">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="ToggleButton" Property="BorderThickness" Value="3"/>
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource SurfaceVariant}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Enhanced ComboBox for Master Data - Same Dark Mode approach as StartWindow -->
    <Style x:Key="MasterDataComboBox" TargetType="ComboBox">
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="12,12"/>
        <!-- DYNAMISCHE Farben für Dark/Light Mode -->
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <!-- Scrollviewer-Optimierungen -->
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="ScrollViewer.IsManipulationEnabled" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- Full Dark Mode Template from StartWindow -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="6">
                                        <Grid HorizontalAlignment="Right" Width="20" Margin="8,0">
                                            <Path x:Name="Arrow" 
                                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource OnSurface}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SurfaceVariant}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        TextElement.Foreground="{DynamicResource OnSurface}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                               Style="{x:Null}"
                               Background="Transparent"
                               Foreground="{DynamicResource OnSurface}"
                               CaretBrush="{DynamicResource Primary}"
                               SelectionBrush="{DynamicResource Primary}"
                               SelectionOpacity="0.3"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="{TemplateBinding Padding}"
                               Focusable="True"
                               Visibility="Hidden"
                               IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="PART_Popup" 
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True" 
                             Focusable="False"
                             PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="200">
                                <Border Background="{DynamicResource Surface}"
                                      BorderBrush="{DynamicResource Primary}" 
                                      BorderThickness="2"
                                      CornerRadius="6"
                                      Effect="{StaticResource Elevation3}">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxItem Style - Full Template for Dark Mode -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="4"
                            Margin="2">
                        <ContentPresenter HorizontalAlignment="Left" 
                                        VerticalAlignment="Center"
                                        TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Foreground" Value="{DynamicResource OnPrimaryContainer}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Primary}"/>
                            <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- 🔲 BUTTON SYSTEM - Modern Orange Design -->
    <!-- FIXED: Improved text sizing to prevent truncation -->
    <!-- ========================================= -->

    <!-- Standard Button - FIXED for better text fitting -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Primary}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="80"/>
        <!-- REMOVED fixed Height to allow auto-sizing -->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="20"
                            Effect="{StaticResource Elevation1}"
                            Padding="{TemplateBinding Padding}">
                        <!-- FIXED: Better content sizing -->
                        <ContentPresenter x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                            <Setter Property="Opacity" Value="0.92"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation1}"/>
                            <Setter Property="Opacity" Value="0.88"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Filled Button (alias für Standard Button) -->
    <Style x:Key="FilledButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}"/>

    <!-- Orange Accent Button - FIXED for better text fitting -->
    <Style x:Key="OrangeAccentButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Primary}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,16"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="MinWidth" Value="120"/>
        <!-- REMOVED fixed Height to allow auto-sizing -->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="24"
                            Effect="{StaticResource OrangeElevation2}"
                            Padding="{TemplateBinding Padding}">
                        <!-- FIXED: Better content sizing -->
                        <ContentPresenter x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource OrangeElevation3}"/>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Tertiary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Outlined Button - FIXED for better text fitting -->
    <Style x:Key="OutlinedButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="80"/>
        <!-- REMOVED fixed Height to allow auto-sizing -->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20"
                            Padding="{TemplateBinding Padding}">
                        <!-- FIXED: Better content sizing -->
                        <ContentPresenter x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.85"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text Button - FIXED for better text fitting -->
    <Style x:Key="TextButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="MinWidth" Value="60"/>
        <!-- REMOVED fixed Height to allow auto-sizing -->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="18"
                            Padding="{TemplateBinding Padding}">
                        <!-- FIXED: Better content sizing -->
                        <ContentPresenter x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.12"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.16"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FAB (Floating Action Button) - UNCHANGED as it's icon-based -->
    <Style x:Key="FAB" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Primary}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="28"
                            Effect="{StaticResource Elevation3}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation4}"/>
                            <Setter Property="Opacity" Value="0.92"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                            <Setter Property="Opacity" Value="0.88"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- 🔲 RESPONSIVE BUTTON STYLES -->
    <!-- Additional styles for responsive buttons that adapt to content -->
    <!-- ========================================= -->

    <!-- Auto-sizing Button - Grows with content -->
    <Style x:Key="AutoSizeButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- Compact Button - For space-constrained areas -->
    <Style x:Key="CompactButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="60"/>
    </Style>

    <!-- Wide Button - For important actions -->
    <Style x:Key="WideButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="32,12"/>
        <Setter Property="MinWidth" Value="140"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <!-- Base Card Style -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource OutlineVariant}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Effect" Value="{StaticResource Elevation1}"/>
    </Style>

    <!-- Elevated Card Style -->
    <Style x:Key="CardElevated" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Effect" Value="{StaticResource Elevation3}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Orange Card Style -->
    <Style x:Key="OrangeCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Background" Value="{DynamicResource PrimaryContainer}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
        <Setter Property="Effect" Value="{StaticResource OrangeElevation2}"/>
    </Style>

    <!-- ========================================= -->
    <!-- 🎯 FORM LABEL STYLES -->
    <!-- ========================================= -->

    <!-- Form Label Style -->
    <Style x:Key="FormLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource OnSurfaceVariant}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="0,0,0,4"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <!-- ========================================= -->
    <!-- 🎯 CARD SYSTEM - Material Design 3 Cards -->
    <!-- ========================================= -->

</ResourceDictionary>
