<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 🎨 PROFESSIONAL COLOR PALETTE - Material Design 3 Inspired -->
    
    <!-- Primary Colors -->
    <SolidColorBrush x:Key="Primary" Color="#1565C0"/> <!-- Deep Blue -->
    <SolidColorBrush x:Key="PrimaryContainer" Color="#D6E8F8"/> <!-- Etwas grauer als vorher -->
    <SolidColorBrush x:Key="OnPrimary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnPrimaryContainer" Color="#0D47A1"/>
    
    <!-- Secondary Colors -->
    <SolidColorBrush x:Key="Secondary" Color="#455A64"/> <!-- Blue Grey -->
    <SolidColorBrush x:Key="SecondaryContainer" Color="#CFD8DC"/>
    <SolidColorBrush x:Key="OnSecondary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnSecondaryContainer" Color="#263238"/>
    
    <!-- Tertiary Colors (Light Mode) - ORANGE statt Lila -->
    <SolidColorBrush x:Key="Tertiary" Color="#F57C00"/> <!-- Orange statt Purple -->
    <SolidColorBrush x:Key="TertiaryContainer" Color="#FFE0B2"/> <!-- Helles Orange statt Lila -->
    <SolidColorBrush x:Key="OnTertiary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnTertiaryContainer" Color="#E65100"/> <!-- Dunkles Orange -->
    
    <!-- Surface Colors -->
    <SolidColorBrush x:Key="Surface" Color="#F5F5F5"/> <!-- Hellgrau statt weiß -->
    <SolidColorBrush x:Key="SurfaceVariant" Color="#EEEEEE"/> <!-- Etwas dunkler grau -->
    <SolidColorBrush x:Key="SurfaceContainer" Color="#E8E8E8"/> <!-- Noch etwas dunkler -->
    <SolidColorBrush x:Key="SurfaceContainerHigh" Color="#E1E1E1"/> <!-- Konsistent grauer -->
    <SolidColorBrush x:Key="SurfaceContainerHighest" Color="#DADADA"/> <!-- Dunkelster Grauton -->
    <SolidColorBrush x:Key="OnSurface" Color="#1A1C1E"/>
    <SolidColorBrush x:Key="OnSurfaceVariant" Color="#44474A"/>
    
    <!-- Outline Colors -->
    <SolidColorBrush x:Key="Outline" Color="#74777A"/>
    <SolidColorBrush x:Key="OutlineVariant" Color="#C4C7CA"/>
    
    <!-- Semantic Colors -->
    <SolidColorBrush x:Key="Success" Color="#2E7D32"/>
    <SolidColorBrush x:Key="SuccessContainer" Color="#E8F5E8"/>
    <SolidColorBrush x:Key="OnSuccess" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnSuccessContainer" Color="#1B5E20"/>
    
    <SolidColorBrush x:Key="Warning" Color="#F57C00"/>
    <SolidColorBrush x:Key="WarningContainer" Color="#FFF3E0"/>
    <SolidColorBrush x:Key="OnWarning" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnWarningContainer" Color="#E65100"/>
    
    <SolidColorBrush x:Key="Error" Color="#D32F2F"/>
    <SolidColorBrush x:Key="ErrorContainer" Color="#FFEBEE"/>
    <SolidColorBrush x:Key="OnError" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnErrorContainer" Color="#B71C1C"/>
    
    <!-- Emergency Team Type Colors -->
    <SolidColorBrush x:Key="FlächeColor" Color="#1976D2"/> <!-- Blue -->
    <SolidColorBrush x:Key="TrümmerColor" Color="#F57C00"/> <!-- Orange -->
    <SolidColorBrush x:Key="MantrailerColor" Color="#388E3C"/> <!-- Green -->
    <SolidColorBrush x:Key="WasserColor" Color="#0097A7"/> <!-- Cyan -->
    <SolidColorBrush x:Key="LawineColor" Color="#7B1FA2"/> <!-- Purple - BLEIBT für Lawinen-Teams -->
    <SolidColorBrush x:Key="AllgemeinColor" Color="#616161"/> <!-- Grey -->
    
    <!-- 🌓 DARK THEME COLORS -->
    
    <!-- Dark Primary Colors -->
    <SolidColorBrush x:Key="DarkPrimary" Color="#90CAF9"/>
    <SolidColorBrush x:Key="DarkPrimaryContainer" Color="#0D47A1"/>
    <SolidColorBrush x:Key="DarkOnPrimary" Color="#0A2C5A"/>
    <SolidColorBrush x:Key="DarkOnPrimaryContainer" Color="#C5E1FF"/>
    
    <!-- Dark Secondary Colors -->
    <SolidColorBrush x:Key="DarkSecondary" Color="#B0BEC5"/>
    <SolidColorBrush x:Key="DarkSecondaryContainer" Color="#37474F"/>
    <SolidColorBrush x:Key="DarkOnSecondary" Color="#1C313A"/>
    <SolidColorBrush x:Key="DarkOnSecondaryContainer" Color="#CFD8DC"/>
    
    <!-- Dark Tertiary Colors - ORANGE -->
    <SolidColorBrush x:Key="DarkTertiary" Color="#FFB74D"/> <!-- Helles Orange für Akzente -->
    <SolidColorBrush x:Key="DarkTertiaryContainer" Color="#E65100"/> <!-- Dunkles Orange für Container -->
    <SolidColorBrush x:Key="DarkOnTertiary" Color="#1A0F00"/> <!-- Sehr dunkles Braun für Text auf Orange -->
    <SolidColorBrush x:Key="DarkOnTertiaryContainer" Color="#FFE0B2"/> <!-- Helles Orange-Beige für Text auf Container -->
    
    <!-- Dark Surface Colors - NEUTRALES DUNKELGRAU statt Orange-Braun -->
    <SolidColorBrush x:Key="DarkSurface" Color="#1C1C1E"/> <!-- Neutrales dunkles Grau -->
    <SolidColorBrush x:Key="DarkSurfaceVariant" Color="#2C2C2E"/> <!-- Etwas heller grau für Kontrast -->
    <SolidColorBrush x:Key="DarkSurfaceContainer" Color="#1E1E20"/> <!-- Grau für Container -->
    <SolidColorBrush x:Key="DarkSurfaceContainerHigh" Color="#2A2A2C"/> <!-- Heller Grau für erhöhte Bereiche -->
    <SolidColorBrush x:Key="DarkSurfaceContainerHighest" Color="#36363A"/> <!-- Hellster Grau für höchste Ebenen -->
    <SolidColorBrush x:Key="DarkOnSurface" Color="#E5E5E7"/> <!-- Helles Grau für Haupttext -->
    <SolidColorBrush x:Key="DarkOnSurfaceVariant" Color="#AEAEB2"/> <!-- Mittelgrau für sekundären Text -->
    
    <!-- Dark Outline Colors -->
    <SolidColorBrush x:Key="DarkOutline" Color="#48484A"/>
    <SolidColorBrush x:Key="DarkOutlineVariant" Color="#3A3A3C"/>
    
    <!-- 📝 TYPOGRAPHY SYSTEM -->
    
    <!-- Display Typography -->
    <Style x:Key="DisplayLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="57"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="64"/>
    </Style>
    
    <Style x:Key="DisplayMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="45"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="52"/>
    </Style>
    
    <Style x:Key="DisplaySmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="44"/>
    </Style>
    
    <!-- Headline Typography -->
    <Style x:Key="HeadlineLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="40"/>
    </Style>
    
    <Style x:Key="HeadlineMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="36"/>
    </Style>
    
    <Style x:Key="HeadlineSmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="32"/>
    </Style>
    
    <!-- Title Typography -->
    <Style x:Key="TitleLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="28"/>
    </Style>
    
    <Style x:Key="TitleMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>
    
    <Style x:Key="TitleSmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>
    
    <!-- Label Typography -->
    <Style x:Key="LabelLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>
    
    <Style x:Key="LabelMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>
    
    <Style x:Key="LabelSmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>
    
    <!-- Body Typography -->
    <Style x:Key="BodyLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>
    
    <Style x:Key="BodyMedium" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>
    
    <Style x:Key="BodySmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>
    
    <!-- 🔘 ELEVATION SYSTEM -->
    
    <DropShadowEffect x:Key="Elevation1" Color="Black" BlurRadius="3" ShadowDepth="1" Opacity="0.12"/>
    <DropShadowEffect x:Key="Elevation2" Color="Black" BlurRadius="6" ShadowDepth="2" Opacity="0.16"/>
    <DropShadowEffect x:Key="Elevation3" Color="Black" BlurRadius="10" ShadowDepth="3" Opacity="0.19"/>
    <DropShadowEffect x:Key="Elevation4" Color="Black" BlurRadius="14" ShadowDepth="4" Opacity="0.25"/>
    <DropShadowEffect x:Key="Elevation5" Color="Black" BlurRadius="20" ShadowDepth="5" Opacity="0.30"/>
    
    <!-- 🎯 COMPONENT STYLES -->
    
    <!-- Help Window Specific Styles -->
    <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
        <Setter Property="Margin" Value="0,20,0,16"/>
        <Setter Property="LineHeight" Value="32"/>
    </Style>
    
    <Style x:Key="SubHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="Margin" Value="0,16,0,8"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>
    
    <Style x:Key="ContentStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurfaceVariant}"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <Style x:Key="ShortcutStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource OutlineVariant}"/>
    </Style>
    
    <Style x:Key="KeyStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Consolas, monospace"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryContainer}"/>
        <Setter Property="Padding" Value="6,3"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- Card Style -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Surface}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Effect" Value="{StaticResource Elevation2}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <Style x:Key="CardElevated" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Effect" Value="{StaticResource Elevation4}"/>
    </Style>
    
    <!-- Filled Button -->
    <Style x:Key="FilledButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Primary}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="24,10"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="20"
                            Effect="{StaticResource Elevation1}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                            <Setter Property="Opacity" Value="0.92"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation1}"/>
                            <Setter Property="Opacity" Value="0.88"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Outlined Button -->
    <Style x:Key="OutlinedButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="Padding" Value="24,10"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.08"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.12"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Text Button -->
    <Style x:Key="TextButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.08"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryContainer}"/>
                            <Setter Property="Opacity" Value="0.12"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Floating Action Button -->
    <Style x:Key="FAB" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Primary}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="16"
                            Effect="{StaticResource Elevation3}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation4}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource Elevation2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Text Field -->
    <Style x:Key="TextField" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="CaretBrush" Value="{DynamicResource OnSurface}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource OnSurface}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Standard TextBox Style für automatische Anwendung -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="CaretBrush" Value="{DynamicResource OnSurface}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource OnSurface}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ComboBox Style für Dark/Light Mode -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="4">
                                        <Grid HorizontalAlignment="Right" Width="20">
                                            <Path x:Name="Arrow" 
                                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource OnSurface}"/>
                                        </Grid>
                                    </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        TextElement.Foreground="{DynamicResource OnSurface}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                               Style="{x:Null}"
                               Background="Transparent"
                               Foreground="{DynamicResource OnSurface}"
                               CaretBrush="{DynamicResource OnSurface}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="{TemplateBinding Padding}"
                               Focusable="True"
                               Visibility="Hidden"
                               IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="PART_Popup" 
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True" 
                             Focusable="False"
                             PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="200">
                                <Border Background="{DynamicResource Surface}"
                                      BorderBrush="{DynamicResource Outline}"
                                      BorderThickness="1"
                                      CornerRadius="4">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Standard ComboBox Style für automatische Anwendung -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource SurfaceVariant}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="4">
                                        <Grid HorizontalAlignment="Right" Width="20">
                                            <Path x:Name="Arrow" 
                                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource OnSurface}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        TextElement.Foreground="{DynamicResource OnSurface}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                               Style="{x:Null}"
                               Background="Transparent"
                               Foreground="{DynamicResource OnSurface}"
                               CaretBrush="{DynamicResource OnSurface}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="{TemplateBinding Padding}"
                               Focusable="True"
                               Visibility="Hidden"
                               IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="PART_Popup" 
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True" 
                             Focusable="False"
                             PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="200">
                                <Border Background="{DynamicResource Surface}"
                                      BorderBrush="{DynamicResource Outline}"
                                      BorderThickness="1"
                                      CornerRadius="4">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ✨ ANIMATIONS -->
    
    <!-- 🌈 DYNAMIC GRADIENTS für Dark/Light Mode -->
    
    <!-- Primary Gradient für Light Mode -->
    <LinearGradientBrush x:Key="PrimaryGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#D6E8F8" Offset="0"/> <!-- Konsistent mit PrimaryContainer -->
        <GradientStop Color="#B3D4F1" Offset="1"/> <!-- Etwas dunkler -->
    </LinearGradientBrush>
    
    <!-- Primary Gradient für Dark Mode -->
    <LinearGradientBrush x:Key="DarkPrimaryGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#0D47A1" Offset="0"/> <!-- Dunkles Blau für Dark Mode -->
        <GradientStop Color="#90CAF9" Offset="1"/> <!-- Helles Blau für Dark Mode -->
    </LinearGradientBrush>

</ResourceDictionary>
